ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bsp_OLED.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WriteCmd,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	WriteCmd:
  26              	.LVL0:
  27              	.LFB143:
  28              		.file 1 "USER/BSP/Src/bsp_OLED.c"
   1:USER/BSP/Src/bsp_OLED.c **** #include "bsp_OLED.h"
   2:USER/BSP/Src/bsp_OLED.c **** #include "bsp_ascii.h"
   3:USER/BSP/Src/bsp_OLED.c **** #include "main.h"
   4:USER/BSP/Src/bsp_OLED.c **** 
   5:USER/BSP/Src/bsp_OLED.c **** extern I2C_HandleTypeDef hi2c1;
   6:USER/BSP/Src/bsp_OLED.c **** extern I2C_HandleTypeDef hi2c2;
   7:USER/BSP/Src/bsp_OLED.c **** 
   8:USER/BSP/Src/bsp_OLED.c **** /**
   9:USER/BSP/Src/bsp_OLED.c ****  * @brief 基本的两个I2C输入输出命令
  10:USER/BSP/Src/bsp_OLED.c ****  *
  11:USER/BSP/Src/bsp_OLED.c ****  * @param I2C_Command 
  12:USER/BSP/Src/bsp_OLED.c ****  * 如果需要重新定向到另外的I2C，更改两个函数的内容 hi2c2
  13:USER/BSP/Src/bsp_OLED.c ****  */
  14:USER/BSP/Src/bsp_OLED.c **** 
  15:USER/BSP/Src/bsp_OLED.c **** static void WriteCmd(unsigned char I2C_Command);//写命令
  16:USER/BSP/Src/bsp_OLED.c **** static void WriteDat(unsigned char I2C_Data);//写数据
  17:USER/BSP/Src/bsp_OLED.c **** 
  18:USER/BSP/Src/bsp_OLED.c **** /**
  19:USER/BSP/Src/bsp_OLED.c ****  * @brief OLED 屏幕初始化
  20:USER/BSP/Src/bsp_OLED.c ****  * 
  21:USER/BSP/Src/bsp_OLED.c ****  */
  22:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_Init(void)
  23:USER/BSP/Src/bsp_OLED.c **** {
  24:USER/BSP/Src/bsp_OLED.c **** 	HAL_Delay(100); //这里的延时很重要
  25:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xAE); //display off
  26:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x20);	//Set Memory Addressing Mode	
  27:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x10);	//00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mod
  28:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xb0);	//Set Page Start Address for Page Addressing Mode,0-7
  29:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xc8);	//Set COM Output Scan Direction
  30:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x00); //---set low column address
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 2


  31:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x10); //---set high column address
  32:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x40); //--set start line address
  33:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x81); //--set contrast control register
  34:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xff); //亮度调节 0x00~0xff
  35:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa1); //--set segment re-map 0 to 127
  36:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa6); //--set normal display
  37:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa8); //--set multiplex ratio(1 to 64)
  38:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x3F); //
  39:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  40:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xd3); //-set display offset
  41:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x00); //-not offset
  42:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xd5); //--set display clock divide ratio/oscillator frequency
  43:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xf0); //--set divide ratio
  44:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xd9); //--set pre-charge period
  45:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x22); //
  46:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xda); //--set com pins hardware configuration
  47:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x12);
  48:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xdb); //--set vcomh
  49:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x20); //0x20,0.77xVcc
  50:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x8d); //--set DC-DC enable
  51:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x14); //
  52:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xaf); //--turn on oled panel
  53:USER/BSP/Src/bsp_OLED.c **** }
  54:USER/BSP/Src/bsp_OLED.c **** 
  55:USER/BSP/Src/bsp_OLED.c **** /**
  56:USER/BSP/Src/bsp_OLED.c ****  * @brief 设置起始点坐标
  57:USER/BSP/Src/bsp_OLED.c ****  * 
  58:USER/BSP/Src/bsp_OLED.c ****  * @param x 
  59:USER/BSP/Src/bsp_OLED.c ****  * @param y 
  60:USER/BSP/Src/bsp_OLED.c ****  */
  61:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_SetPos(unsigned char x, unsigned char y) 
  62:USER/BSP/Src/bsp_OLED.c **** { 
  63:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xb0+y);
  64:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(((x&0xf0)>>4)|0x10);
  65:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd((x&0x0f)|0x01);
  66:USER/BSP/Src/bsp_OLED.c **** }
  67:USER/BSP/Src/bsp_OLED.c **** 
  68:USER/BSP/Src/bsp_OLED.c **** 
  69:USER/BSP/Src/bsp_OLED.c **** 
  70:USER/BSP/Src/bsp_OLED.c **** /**
  71:USER/BSP/Src/bsp_OLED.c ****  * @brief 全屏幕显示
  72:USER/BSP/Src/bsp_OLED.c ****  * 
  73:USER/BSP/Src/bsp_OLED.c ****  * @param fill_Data 
  74:USER/BSP/Src/bsp_OLED.c ****  */
  75:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_Fill(unsigned char fill_Data)
  76:USER/BSP/Src/bsp_OLED.c **** { 
  77:USER/BSP/Src/bsp_OLED.c **** 	unsigned char m,n;
  78:USER/BSP/Src/bsp_OLED.c **** 	for(m=0;m<8;m++)
  79:USER/BSP/Src/bsp_OLED.c ****     {
  80:USER/BSP/Src/bsp_OLED.c **** 		WriteCmd(0xb0+m);		//page0-page1
  81:USER/BSP/Src/bsp_OLED.c **** 		WriteCmd(0x00);		//low column start address
  82:USER/BSP/Src/bsp_OLED.c **** 		WriteCmd(0x10);		//high column start address
  83:USER/BSP/Src/bsp_OLED.c **** 		for(n=0;n<128;n++)
  84:USER/BSP/Src/bsp_OLED.c ****         {
  85:USER/BSP/Src/bsp_OLED.c **** 			WriteDat(fill_Data);
  86:USER/BSP/Src/bsp_OLED.c **** 		}
  87:USER/BSP/Src/bsp_OLED.c **** 	}
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 3


  88:USER/BSP/Src/bsp_OLED.c **** }
  89:USER/BSP/Src/bsp_OLED.c **** 
  90:USER/BSP/Src/bsp_OLED.c **** /**
  91:USER/BSP/Src/bsp_OLED.c ****  * @brief 全屏幕清空
  92:USER/BSP/Src/bsp_OLED.c ****  * 
  93:USER/BSP/Src/bsp_OLED.c ****  */
  94:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_CLR(void)
  95:USER/BSP/Src/bsp_OLED.c **** {
  96:USER/BSP/Src/bsp_OLED.c **** 	bsp_OLED_Fill(0x00);
  97:USER/BSP/Src/bsp_OLED.c **** }
  98:USER/BSP/Src/bsp_OLED.c **** 
  99:USER/BSP/Src/bsp_OLED.c **** /**
 100:USER/BSP/Src/bsp_OLED.c ****  * @brief bsp_OLED屏幕启动
 101:USER/BSP/Src/bsp_OLED.c ****  * 
 102:USER/BSP/Src/bsp_OLED.c ****  */
 103:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_ON(void)
 104:USER/BSP/Src/bsp_OLED.c **** {
 105:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X8D);  //设置电荷泵
 106:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X14);  //开启电荷泵
 107:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0XAF);  //OLED唤醒
 108:USER/BSP/Src/bsp_OLED.c **** }
 109:USER/BSP/Src/bsp_OLED.c **** 
 110:USER/BSP/Src/bsp_OLED.c **** /**
 111:USER/BSP/Src/bsp_OLED.c ****  * @brief bsp_OLED屏幕关闭
 112:USER/BSP/Src/bsp_OLED.c ****  * 
 113:USER/BSP/Src/bsp_OLED.c ****  */
 114:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_OFF(void)
 115:USER/BSP/Src/bsp_OLED.c **** {
 116:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X8D);  //设置电荷泵
 117:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X10);  //关闭电荷泵
 118:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0XAE);  //OLED休眠
 119:USER/BSP/Src/bsp_OLED.c **** }
 120:USER/BSP/Src/bsp_OLED.c **** 
 121:USER/BSP/Src/bsp_OLED.c **** 
 122:USER/BSP/Src/bsp_OLED.c **** 
 123:USER/BSP/Src/bsp_OLED.c **** /**
 124:USER/BSP/Src/bsp_OLED.c ****  * @brief 字符串显示
 125:USER/BSP/Src/bsp_OLED.c ****  * 
 126:USER/BSP/Src/bsp_OLED.c ****  * @param x 起始坐标x
 127:USER/BSP/Src/bsp_OLED.c ****  * @param y 起始坐标y
 128:USER/BSP/Src/bsp_OLED.c ****  * @param ch[] 要显示字符串
 129:USER/BSP/Src/bsp_OLED.c ****  * @param TextSize 文字大小 1:6*8   2:8*16
 130:USER/BSP/Src/bsp_OLED.c ****  */
 131:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_ShowStr(unsigned char x, unsigned char y, unsigned char *ch, unsigned char TextSize)
 132:USER/BSP/Src/bsp_OLED.c **** {
 133:USER/BSP/Src/bsp_OLED.c **** 	unsigned char c = 0,i = 0,j = 0;
 134:USER/BSP/Src/bsp_OLED.c **** 	switch(TextSize)
 135:USER/BSP/Src/bsp_OLED.c ****     {
 136:USER/BSP/Src/bsp_OLED.c **** 		case 1:
 137:USER/BSP/Src/bsp_OLED.c ****         {
 138:USER/BSP/Src/bsp_OLED.c **** 			while(ch[j] != '\0')
 139:USER/BSP/Src/bsp_OLED.c ****             {
 140:USER/BSP/Src/bsp_OLED.c **** 				c = ch[j] - 32;
 141:USER/BSP/Src/bsp_OLED.c **** 				if(x > 126)
 142:USER/BSP/Src/bsp_OLED.c ****                 {
 143:USER/BSP/Src/bsp_OLED.c **** 					x = 0;
 144:USER/BSP/Src/bsp_OLED.c **** 					y++;
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 4


 145:USER/BSP/Src/bsp_OLED.c **** 				}
 146:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_SetPos(x,y);
 147:USER/BSP/Src/bsp_OLED.c **** 				for(i=0;i<6;i++)
 148:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 149:USER/BSP/Src/bsp_OLED.c **** 				x += 6;
 150:USER/BSP/Src/bsp_OLED.c **** 				j++;
 151:USER/BSP/Src/bsp_OLED.c **** 			}
 152:USER/BSP/Src/bsp_OLED.c **** 		}break;
 153:USER/BSP/Src/bsp_OLED.c **** 		case 2:
 154:USER/BSP/Src/bsp_OLED.c ****         {
 155:USER/BSP/Src/bsp_OLED.c **** 			while(ch[j] != '\0')
 156:USER/BSP/Src/bsp_OLED.c ****             {
 157:USER/BSP/Src/bsp_OLED.c **** 				c = ch[j] - 32;
 158:USER/BSP/Src/bsp_OLED.c **** 				if(x > 120)
 159:USER/BSP/Src/bsp_OLED.c ****                 {
 160:USER/BSP/Src/bsp_OLED.c **** 					x = 0;
 161:USER/BSP/Src/bsp_OLED.c **** 					y++;
 162:USER/BSP/Src/bsp_OLED.c **** 				}
 163:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_SetPos(x,y);
 164:USER/BSP/Src/bsp_OLED.c **** 				for(i=0;i<8;i++)
 165:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 166:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_SetPos(x,y+1);
 167:USER/BSP/Src/bsp_OLED.c **** 				for(i=0;i<8;i++)
 168:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 169:USER/BSP/Src/bsp_OLED.c **** 				x += 8;
 170:USER/BSP/Src/bsp_OLED.c **** 				j++;
 171:USER/BSP/Src/bsp_OLED.c **** 			}
 172:USER/BSP/Src/bsp_OLED.c **** 		}break;
 173:USER/BSP/Src/bsp_OLED.c **** 	}
 174:USER/BSP/Src/bsp_OLED.c **** }
 175:USER/BSP/Src/bsp_OLED.c **** 
 176:USER/BSP/Src/bsp_OLED.c **** 
 177:USER/BSP/Src/bsp_OLED.c **** /**
 178:USER/BSP/Src/bsp_OLED.c ****  * @brief 中文显示
 179:USER/BSP/Src/bsp_OLED.c ****  * 
 180:USER/BSP/Src/bsp_OLED.c ****  * @param x 起始点坐标X
 181:USER/BSP/Src/bsp_OLED.c ****  * @param y 起始点坐标Y
 182:USER/BSP/Src/bsp_OLED.c ****  * @param N 要显示的汉字
 183:USER/BSP/Src/bsp_OLED.c ****  */
 184:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_ShowCN(unsigned char x, unsigned char y, unsigned char N)
 185:USER/BSP/Src/bsp_OLED.c **** {
 186:USER/BSP/Src/bsp_OLED.c **** 	unsigned char wm=0;
 187:USER/BSP/Src/bsp_OLED.c **** 	unsigned int  adder=32*N;
 188:USER/BSP/Src/bsp_OLED.c **** 	bsp_OLED_SetPos(x , y);
 189:USER/BSP/Src/bsp_OLED.c **** 	for(wm = 0;wm < 16;wm++)
 190:USER/BSP/Src/bsp_OLED.c **** 	{
 191:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F16x16[adder]);
 192:USER/BSP/Src/bsp_OLED.c **** 		adder += 1;
 193:USER/BSP/Src/bsp_OLED.c **** 	}
 194:USER/BSP/Src/bsp_OLED.c **** 	bsp_OLED_SetPos(x,y + 1);
 195:USER/BSP/Src/bsp_OLED.c **** 	for(wm = 0;wm < 16;wm++)
 196:USER/BSP/Src/bsp_OLED.c **** 	{
 197:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F16x16[adder]);
 198:USER/BSP/Src/bsp_OLED.c **** 		adder += 1;
 199:USER/BSP/Src/bsp_OLED.c **** 	}
 200:USER/BSP/Src/bsp_OLED.c **** }
 201:USER/BSP/Src/bsp_OLED.c **** 
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 5


 202:USER/BSP/Src/bsp_OLED.c **** 
 203:USER/BSP/Src/bsp_OLED.c **** 
 204:USER/BSP/Src/bsp_OLED.c **** 
 205:USER/BSP/Src/bsp_OLED.c **** // 这是自己写的显示中文字符串的函数，要先把中文字符串“共阴——列行
 206:USER/BSP/Src/bsp_OLED.c **** //传入参数分别为：x:起始横坐标  
 207:USER/BSP/Src/bsp_OLED.c **** //								y：纵坐标(填入0-7)  
 208:USER/BSP/Src/bsp_OLED.c **** //								begin:填入的中文字符串的第一个字在我们ascll.c字库里面的序号  
 209:USER/BSP/Src/bsp_OLED.c **** //                num:我们要填写几个字
 210:USER/BSP/Src/bsp_OLED.c **** //                比如要填“测试”，取完字模存入后这两个字在字库中序号为
 211:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_ShowCN_STR(u8 x , u8 y , u8 begin , u8 num)
 212:USER/BSP/Src/bsp_OLED.c **** {
 213:USER/BSP/Src/bsp_OLED.c **** 	u8 i;
 214:USER/BSP/Src/bsp_OLED.c **** 	for(i=0;i<num;i++)
 215:USER/BSP/Src/bsp_OLED.c ****     {
 216:USER/BSP/Src/bsp_OLED.c ****         bsp_OLED_ShowCN(i*16+x,y,i+begin);
 217:USER/BSP/Src/bsp_OLED.c ****     }    //OLED显示标题
 218:USER/BSP/Src/bsp_OLED.c **** }
 219:USER/BSP/Src/bsp_OLED.c **** 
 220:USER/BSP/Src/bsp_OLED.c **** 
 221:USER/BSP/Src/bsp_OLED.c **** 
 222:USER/BSP/Src/bsp_OLED.c **** // Parameters     : x0,y0 -- ; x1,y1 -- 起点对角线(结束点)的坐标(x1:1~128,y1:1~8)
 223:USER/BSP/Src/bsp_OLED.c **** // Description    : 显示BMP位图
 224:USER/BSP/Src/bsp_OLED.c **** /**
 225:USER/BSP/Src/bsp_OLED.c ****  * @brief 
 226:USER/BSP/Src/bsp_OLED.c ****  * 
 227:USER/BSP/Src/bsp_OLED.c ****  * @param x0 起始坐标点 起始点坐标(x0:0~127, y0:0~7)
 228:USER/BSP/Src/bsp_OLED.c ****  * @param y0 
 229:USER/BSP/Src/bsp_OLED.c ****  * @param x1 结束点坐标  起点对角线(结束点)的坐标(x1:1~128,y1:1~8)
 230:USER/BSP/Src/bsp_OLED.c ****  * @param y1 
 231:USER/BSP/Src/bsp_OLED.c ****  * @param BMP 显示BMP位图
 232:USER/BSP/Src/bsp_OLED.c ****  */
 233:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_DrawBMP(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1,unsigned 
 234:USER/BSP/Src/bsp_OLED.c **** {
 235:USER/BSP/Src/bsp_OLED.c **** 	unsigned int j=0;
 236:USER/BSP/Src/bsp_OLED.c **** 	unsigned char x,y;
 237:USER/BSP/Src/bsp_OLED.c **** 
 238:USER/BSP/Src/bsp_OLED.c ****   if(y1%8==0)
 239:USER/BSP/Src/bsp_OLED.c **** 		y = y1/8;
 240:USER/BSP/Src/bsp_OLED.c ****   else
 241:USER/BSP/Src/bsp_OLED.c **** 		y = y1/8 + 1;
 242:USER/BSP/Src/bsp_OLED.c **** 	for(y=y0;y<y1;y++)
 243:USER/BSP/Src/bsp_OLED.c **** 	{
 244:USER/BSP/Src/bsp_OLED.c ****         bsp_OLED_SetPos(x0,y);
 245:USER/BSP/Src/bsp_OLED.c ****         for(x=x0;x<x1;x++)
 246:USER/BSP/Src/bsp_OLED.c **** 		{
 247:USER/BSP/Src/bsp_OLED.c **** 			WriteDat(BMP[j++]);
 248:USER/BSP/Src/bsp_OLED.c **** 		}
 249:USER/BSP/Src/bsp_OLED.c **** 	}
 250:USER/BSP/Src/bsp_OLED.c **** }
 251:USER/BSP/Src/bsp_OLED.c **** 
 252:USER/BSP/Src/bsp_OLED.c **** /**
 253:USER/BSP/Src/bsp_OLED.c ****  * @brief 显示单个字母
 254:USER/BSP/Src/bsp_OLED.c ****  * 
 255:USER/BSP/Src/bsp_OLED.c ****  * @param x 起始点坐标 
 256:USER/BSP/Src/bsp_OLED.c ****  * @param y 
 257:USER/BSP/Src/bsp_OLED.c ****  * @param chr 字符
 258:USER/BSP/Src/bsp_OLED.c ****  * @param Char_Size  
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 6


 259:USER/BSP/Src/bsp_OLED.c ****  */
 260:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 261:USER/BSP/Src/bsp_OLED.c **** {      	
 262:USER/BSP/Src/bsp_OLED.c **** 	unsigned char c=0,i=0;	
 263:USER/BSP/Src/bsp_OLED.c **** 	c=chr-' ';//得到偏移后的值			
 264:USER/BSP/Src/bsp_OLED.c **** 	if(x>128-1){x=0;y=y+2;}
 265:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
 266:USER/BSP/Src/bsp_OLED.c **** 	{
 267:USER/BSP/Src/bsp_OLED.c **** 		bsp_OLED_SetPos(x,y);	
 268:USER/BSP/Src/bsp_OLED.c **** 		for(i=0;i<8;i++)
 269:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 270:USER/BSP/Src/bsp_OLED.c **** 		bsp_OLED_SetPos(x,y+1);
 271:USER/BSP/Src/bsp_OLED.c **** 		for(i=0;i<8;i++)
 272:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 273:USER/BSP/Src/bsp_OLED.c **** 	}
 274:USER/BSP/Src/bsp_OLED.c **** 	else 
 275:USER/BSP/Src/bsp_OLED.c ****     {	
 276:USER/BSP/Src/bsp_OLED.c **** 		bsp_OLED_SetPos(x,y);
 277:USER/BSP/Src/bsp_OLED.c **** 		for(i=0;i<6;i++)
 278:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 279:USER/BSP/Src/bsp_OLED.c **** 	}
 280:USER/BSP/Src/bsp_OLED.c **** }
 281:USER/BSP/Src/bsp_OLED.c **** 
 282:USER/BSP/Src/bsp_OLED.c **** 
 283:USER/BSP/Src/bsp_OLED.c **** 
 284:USER/BSP/Src/bsp_OLED.c **** u32 bsp_OLED_pow(u8 m,u8 n)
 285:USER/BSP/Src/bsp_OLED.c **** {
 286:USER/BSP/Src/bsp_OLED.c **** 	u32 result=1;	 
 287:USER/BSP/Src/bsp_OLED.c **** 	while(n--)result*=m;    
 288:USER/BSP/Src/bsp_OLED.c **** 	return result;
 289:USER/BSP/Src/bsp_OLED.c **** }	
 290:USER/BSP/Src/bsp_OLED.c **** //显示2个数字
 291:USER/BSP/Src/bsp_OLED.c **** //x,y :起点坐标	 
 292:USER/BSP/Src/bsp_OLED.c **** //len :数字的位数
 293:USER/BSP/Src/bsp_OLED.c **** //size:字体大小
 294:USER/BSP/Src/bsp_OLED.c **** //mode:模式	0,填充模式;1,叠加模式
 295:USER/BSP/Src/bsp_OLED.c **** //num:数值(0~4294967295);
 296:USER/BSP/Src/bsp_OLED.c **** /**
 297:USER/BSP/Src/bsp_OLED.c ****  * @brief 显示数字
 298:USER/BSP/Src/bsp_OLED.c ****  * 
 299:USER/BSP/Src/bsp_OLED.c ****  * @param x 起始坐标
 300:USER/BSP/Src/bsp_OLED.c ****  * @param y 
 301:USER/BSP/Src/bsp_OLED.c ****  * @param num 要显示的数值
 302:USER/BSP/Src/bsp_OLED.c ****  * @param len 数字位数
 303:USER/BSP/Src/bsp_OLED.c ****  * @param size2 大小
 304:USER/BSP/Src/bsp_OLED.c ****  */
 305:USER/BSP/Src/bsp_OLED.c **** void bsp_OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 306:USER/BSP/Src/bsp_OLED.c **** {         	
 307:USER/BSP/Src/bsp_OLED.c **** 	u8 t,temp;
 308:USER/BSP/Src/bsp_OLED.c **** 	u8 enshow=0;						   
 309:USER/BSP/Src/bsp_OLED.c **** 	for(t=0;t<len;t++)
 310:USER/BSP/Src/bsp_OLED.c **** 	{
 311:USER/BSP/Src/bsp_OLED.c **** 		temp=(num/bsp_OLED_pow(10,len-t-1))%10;
 312:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
 313:USER/BSP/Src/bsp_OLED.c **** 		{
 314:USER/BSP/Src/bsp_OLED.c **** 			if(temp==0)
 315:USER/BSP/Src/bsp_OLED.c **** 			{
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 7


 316:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 317:USER/BSP/Src/bsp_OLED.c **** 				continue;
 318:USER/BSP/Src/bsp_OLED.c **** 			}else enshow=1; 
 319:USER/BSP/Src/bsp_OLED.c **** 		}
 320:USER/BSP/Src/bsp_OLED.c **** 	 	bsp_OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 321:USER/BSP/Src/bsp_OLED.c **** 	}
 322:USER/BSP/Src/bsp_OLED.c **** } 
 323:USER/BSP/Src/bsp_OLED.c **** 
 324:USER/BSP/Src/bsp_OLED.c **** /**
 325:USER/BSP/Src/bsp_OLED.c ****  * @brief 对OLED进行指令数据写入
 326:USER/BSP/Src/bsp_OLED.c ****  * 
 327:USER/BSP/Src/bsp_OLED.c ****  * @param I2C_Command 
 328:USER/BSP/Src/bsp_OLED.c ****  */
 329:USER/BSP/Src/bsp_OLED.c **** static void WriteCmd(unsigned char I2C_Command)
 330:USER/BSP/Src/bsp_OLED.c **** {
  29              		.loc 1 330 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 330 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 8DF81700 		strb	r0, [sp, #23]
 331:USER/BSP/Src/bsp_OLED.c **** 	HAL_I2C_Mem_Write(&hi2c2,OLED0561_ADD,COM,I2C_MEMADD_SIZE_8BIT,&I2C_Command,1,100);
  42              		.loc 1 331 2 is_stmt 1 view .LVU2
  43 0008 6423     		movs	r3, #100
  44 000a 0293     		str	r3, [sp, #8]
  45 000c 0123     		movs	r3, #1
  46 000e 0193     		str	r3, [sp, #4]
  47 0010 0DF11702 		add	r2, sp, #23
  48 0014 0092     		str	r2, [sp]
  49 0016 0022     		movs	r2, #0
  50 0018 7821     		movs	r1, #120
  51 001a 0348     		ldr	r0, .L3
  52              	.LVL1:
  53              		.loc 1 331 2 is_stmt 0 view .LVU3
  54 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
  55              	.LVL2:
 332:USER/BSP/Src/bsp_OLED.c **** }
  56              		.loc 1 332 1 view .LVU4
  57 0020 07B0     		add	sp, sp, #28
  58              	.LCFI2:
  59              		.cfi_def_cfa_offset 4
  60              		@ sp needed
  61 0022 5DF804FB 		ldr	pc, [sp], #4
  62              	.L4:
  63 0026 00BF     		.align	2
  64              	.L3:
  65 0028 00000000 		.word	hi2c2
  66              		.cfi_endproc
  67              	.LFE143:
  69              		.section	.text.WriteDat,"ax",%progbits
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 8


  70              		.align	1
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	WriteDat:
  77              	.LVL3:
  78              	.LFB144:
 333:USER/BSP/Src/bsp_OLED.c **** 
 334:USER/BSP/Src/bsp_OLED.c **** /**
 335:USER/BSP/Src/bsp_OLED.c ****  * @brief 对OLED进行显示数据写入
 336:USER/BSP/Src/bsp_OLED.c ****  * 
 337:USER/BSP/Src/bsp_OLED.c ****  * @param I2C_Data 
 338:USER/BSP/Src/bsp_OLED.c ****  */
 339:USER/BSP/Src/bsp_OLED.c **** static void WriteDat(unsigned char I2C_Data)
 340:USER/BSP/Src/bsp_OLED.c **** {
  79              		.loc 1 340 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 340 1 is_stmt 0 view .LVU6
  84 0000 00B5     		push	{lr}
  85              	.LCFI3:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
  88 0002 87B0     		sub	sp, sp, #28
  89              	.LCFI4:
  90              		.cfi_def_cfa_offset 32
  91 0004 8DF81700 		strb	r0, [sp, #23]
 341:USER/BSP/Src/bsp_OLED.c **** 	HAL_I2C_Mem_Write(&hi2c2,OLED0561_ADD,DAT,I2C_MEMADD_SIZE_8BIT,&I2C_Data,1,100);
  92              		.loc 1 341 2 is_stmt 1 view .LVU7
  93 0008 6423     		movs	r3, #100
  94 000a 0293     		str	r3, [sp, #8]
  95 000c 0123     		movs	r3, #1
  96 000e 0193     		str	r3, [sp, #4]
  97 0010 0DF11702 		add	r2, sp, #23
  98 0014 0092     		str	r2, [sp]
  99 0016 4022     		movs	r2, #64
 100 0018 7821     		movs	r1, #120
 101 001a 0348     		ldr	r0, .L7
 102              	.LVL4:
 103              		.loc 1 341 2 is_stmt 0 view .LVU8
 104 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 105              	.LVL5:
 342:USER/BSP/Src/bsp_OLED.c **** }
 106              		.loc 1 342 1 view .LVU9
 107 0020 07B0     		add	sp, sp, #28
 108              	.LCFI5:
 109              		.cfi_def_cfa_offset 4
 110              		@ sp needed
 111 0022 5DF804FB 		ldr	pc, [sp], #4
 112              	.L8:
 113 0026 00BF     		.align	2
 114              	.L7:
 115 0028 00000000 		.word	hi2c2
 116              		.cfi_endproc
 117              	.LFE144:
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 9


 119              		.section	.text.bsp_OLED_Init,"ax",%progbits
 120              		.align	1
 121              		.global	bsp_OLED_Init
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	bsp_OLED_Init:
 128              	.LFB130:
  23:USER/BSP/Src/bsp_OLED.c **** 	HAL_Delay(100); //这里的延时很重要
 129              		.loc 1 23 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133 0000 08B5     		push	{r3, lr}
 134              	.LCFI6:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 3, -8
 137              		.cfi_offset 14, -4
  24:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xAE); //display off
 138              		.loc 1 24 2 view .LVU11
 139 0002 6420     		movs	r0, #100
 140 0004 FFF7FEFF 		bl	HAL_Delay
 141              	.LVL6:
  25:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x20);	//Set Memory Addressing Mode	
 142              		.loc 1 25 2 view .LVU12
 143 0008 AE20     		movs	r0, #174
 144 000a FFF7FEFF 		bl	WriteCmd
 145              	.LVL7:
  26:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x10);	//00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mod
 146              		.loc 1 26 2 view .LVU13
 147 000e 2020     		movs	r0, #32
 148 0010 FFF7FEFF 		bl	WriteCmd
 149              	.LVL8:
  27:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xb0);	//Set Page Start Address for Page Addressing Mode,0-7
 150              		.loc 1 27 2 view .LVU14
 151 0014 1020     		movs	r0, #16
 152 0016 FFF7FEFF 		bl	WriteCmd
 153              	.LVL9:
  28:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xc8);	//Set COM Output Scan Direction
 154              		.loc 1 28 2 view .LVU15
 155 001a B020     		movs	r0, #176
 156 001c FFF7FEFF 		bl	WriteCmd
 157              	.LVL10:
  29:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x00); //---set low column address
 158              		.loc 1 29 2 view .LVU16
 159 0020 C820     		movs	r0, #200
 160 0022 FFF7FEFF 		bl	WriteCmd
 161              	.LVL11:
  30:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x10); //---set high column address
 162              		.loc 1 30 2 view .LVU17
 163 0026 0020     		movs	r0, #0
 164 0028 FFF7FEFF 		bl	WriteCmd
 165              	.LVL12:
  31:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x40); //--set start line address
 166              		.loc 1 31 2 view .LVU18
 167 002c 1020     		movs	r0, #16
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 10


 168 002e FFF7FEFF 		bl	WriteCmd
 169              	.LVL13:
  32:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x81); //--set contrast control register
 170              		.loc 1 32 2 view .LVU19
 171 0032 4020     		movs	r0, #64
 172 0034 FFF7FEFF 		bl	WriteCmd
 173              	.LVL14:
  33:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xff); //亮度调节 0x00~0xff
 174              		.loc 1 33 2 view .LVU20
 175 0038 8120     		movs	r0, #129
 176 003a FFF7FEFF 		bl	WriteCmd
 177              	.LVL15:
  34:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa1); //--set segment re-map 0 to 127
 178              		.loc 1 34 2 view .LVU21
 179 003e FF20     		movs	r0, #255
 180 0040 FFF7FEFF 		bl	WriteCmd
 181              	.LVL16:
  35:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa6); //--set normal display
 182              		.loc 1 35 2 view .LVU22
 183 0044 A120     		movs	r0, #161
 184 0046 FFF7FEFF 		bl	WriteCmd
 185              	.LVL17:
  36:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa8); //--set multiplex ratio(1 to 64)
 186              		.loc 1 36 2 view .LVU23
 187 004a A620     		movs	r0, #166
 188 004c FFF7FEFF 		bl	WriteCmd
 189              	.LVL18:
  37:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x3F); //
 190              		.loc 1 37 2 view .LVU24
 191 0050 A820     		movs	r0, #168
 192 0052 FFF7FEFF 		bl	WriteCmd
 193              	.LVL19:
  38:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xa4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 194              		.loc 1 38 2 view .LVU25
 195 0056 3F20     		movs	r0, #63
 196 0058 FFF7FEFF 		bl	WriteCmd
 197              	.LVL20:
  39:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xd3); //-set display offset
 198              		.loc 1 39 2 view .LVU26
 199 005c A420     		movs	r0, #164
 200 005e FFF7FEFF 		bl	WriteCmd
 201              	.LVL21:
  40:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x00); //-not offset
 202              		.loc 1 40 2 view .LVU27
 203 0062 D320     		movs	r0, #211
 204 0064 FFF7FEFF 		bl	WriteCmd
 205              	.LVL22:
  41:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xd5); //--set display clock divide ratio/oscillator frequency
 206              		.loc 1 41 2 view .LVU28
 207 0068 0020     		movs	r0, #0
 208 006a FFF7FEFF 		bl	WriteCmd
 209              	.LVL23:
  42:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xf0); //--set divide ratio
 210              		.loc 1 42 2 view .LVU29
 211 006e D520     		movs	r0, #213
 212 0070 FFF7FEFF 		bl	WriteCmd
 213              	.LVL24:
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 11


  43:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xd9); //--set pre-charge period
 214              		.loc 1 43 2 view .LVU30
 215 0074 F020     		movs	r0, #240
 216 0076 FFF7FEFF 		bl	WriteCmd
 217              	.LVL25:
  44:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x22); //
 218              		.loc 1 44 2 view .LVU31
 219 007a D920     		movs	r0, #217
 220 007c FFF7FEFF 		bl	WriteCmd
 221              	.LVL26:
  45:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xda); //--set com pins hardware configuration
 222              		.loc 1 45 2 view .LVU32
 223 0080 2220     		movs	r0, #34
 224 0082 FFF7FEFF 		bl	WriteCmd
 225              	.LVL27:
  46:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x12);
 226              		.loc 1 46 2 view .LVU33
 227 0086 DA20     		movs	r0, #218
 228 0088 FFF7FEFF 		bl	WriteCmd
 229              	.LVL28:
  47:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xdb); //--set vcomh
 230              		.loc 1 47 2 view .LVU34
 231 008c 1220     		movs	r0, #18
 232 008e FFF7FEFF 		bl	WriteCmd
 233              	.LVL29:
  48:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x20); //0x20,0.77xVcc
 234              		.loc 1 48 2 view .LVU35
 235 0092 DB20     		movs	r0, #219
 236 0094 FFF7FEFF 		bl	WriteCmd
 237              	.LVL30:
  49:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x8d); //--set DC-DC enable
 238              		.loc 1 49 2 view .LVU36
 239 0098 2020     		movs	r0, #32
 240 009a FFF7FEFF 		bl	WriteCmd
 241              	.LVL31:
  50:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0x14); //
 242              		.loc 1 50 2 view .LVU37
 243 009e 8D20     		movs	r0, #141
 244 00a0 FFF7FEFF 		bl	WriteCmd
 245              	.LVL32:
  51:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xaf); //--turn on oled panel
 246              		.loc 1 51 2 view .LVU38
 247 00a4 1420     		movs	r0, #20
 248 00a6 FFF7FEFF 		bl	WriteCmd
 249              	.LVL33:
  52:USER/BSP/Src/bsp_OLED.c **** }
 250              		.loc 1 52 2 view .LVU39
 251 00aa AF20     		movs	r0, #175
 252 00ac FFF7FEFF 		bl	WriteCmd
 253              	.LVL34:
  53:USER/BSP/Src/bsp_OLED.c **** 
 254              		.loc 1 53 1 is_stmt 0 view .LVU40
 255 00b0 08BD     		pop	{r3, pc}
 256              		.cfi_endproc
 257              	.LFE130:
 259              		.section	.text.bsp_OLED_SetPos,"ax",%progbits
 260              		.align	1
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 12


 261              		.global	bsp_OLED_SetPos
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	bsp_OLED_SetPos:
 268              	.LVL35:
 269              	.LFB131:
  62:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xb0+y);
 270              		.loc 1 62 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
  62:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0xb0+y);
 274              		.loc 1 62 1 is_stmt 0 view .LVU42
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI7:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280 0002 0446     		mov	r4, r0
  63:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(((x&0xf0)>>4)|0x10);
 281              		.loc 1 63 2 is_stmt 1 view .LVU43
 282 0004 A1F15000 		sub	r0, r1, #80
 283              	.LVL36:
  63:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(((x&0xf0)>>4)|0x10);
 284              		.loc 1 63 2 is_stmt 0 view .LVU44
 285 0008 C0B2     		uxtb	r0, r0
 286 000a FFF7FEFF 		bl	WriteCmd
 287              	.LVL37:
  64:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd((x&0x0f)|0x01);
 288              		.loc 1 64 2 is_stmt 1 view .LVU45
  64:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd((x&0x0f)|0x01);
 289              		.loc 1 64 20 is_stmt 0 view .LVU46
 290 000e 2009     		lsrs	r0, r4, #4
  64:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd((x&0x0f)|0x01);
 291              		.loc 1 64 2 view .LVU47
 292 0010 40F01000 		orr	r0, r0, #16
 293 0014 FFF7FEFF 		bl	WriteCmd
 294              	.LVL38:
  65:USER/BSP/Src/bsp_OLED.c **** }
 295              		.loc 1 65 2 is_stmt 1 view .LVU48
  65:USER/BSP/Src/bsp_OLED.c **** }
 296              		.loc 1 65 19 is_stmt 0 view .LVU49
 297 0018 04F00E00 		and	r0, r4, #14
  65:USER/BSP/Src/bsp_OLED.c **** }
 298              		.loc 1 65 2 view .LVU50
 299 001c 40F00100 		orr	r0, r0, #1
 300 0020 FFF7FEFF 		bl	WriteCmd
 301              	.LVL39:
  66:USER/BSP/Src/bsp_OLED.c **** 
 302              		.loc 1 66 1 view .LVU51
 303 0024 10BD     		pop	{r4, pc}
 304              		.cfi_endproc
 305              	.LFE131:
 307              		.section	.text.bsp_OLED_Fill,"ax",%progbits
 308              		.align	1
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 13


 309              		.global	bsp_OLED_Fill
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 313              		.fpu fpv4-sp-d16
 315              	bsp_OLED_Fill:
 316              	.LVL40:
 317              	.LFB132:
  76:USER/BSP/Src/bsp_OLED.c **** 	unsigned char m,n;
 318              		.loc 1 76 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
  76:USER/BSP/Src/bsp_OLED.c **** 	unsigned char m,n;
 322              		.loc 1 76 1 is_stmt 0 view .LVU53
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              	.LCFI8:
 325              		.cfi_def_cfa_offset 16
 326              		.cfi_offset 4, -16
 327              		.cfi_offset 5, -12
 328              		.cfi_offset 6, -8
 329              		.cfi_offset 14, -4
 330 0002 0546     		mov	r5, r0
  77:USER/BSP/Src/bsp_OLED.c **** 	for(m=0;m<8;m++)
 331              		.loc 1 77 2 is_stmt 1 view .LVU54
  78:USER/BSP/Src/bsp_OLED.c ****     {
 332              		.loc 1 78 2 view .LVU55
 333              	.LVL41:
  78:USER/BSP/Src/bsp_OLED.c ****     {
 334              		.loc 1 78 7 is_stmt 0 view .LVU56
 335 0004 0026     		movs	r6, #0
  78:USER/BSP/Src/bsp_OLED.c ****     {
 336              		.loc 1 78 2 view .LVU57
 337 0006 01E0     		b	.L14
 338              	.LVL42:
 339              	.L20:
  78:USER/BSP/Src/bsp_OLED.c ****     {
 340              		.loc 1 78 14 is_stmt 1 discriminator 2 view .LVU58
  78:USER/BSP/Src/bsp_OLED.c ****     {
 341              		.loc 1 78 15 is_stmt 0 discriminator 2 view .LVU59
 342 0008 0136     		adds	r6, r6, #1
 343              	.LVL43:
  78:USER/BSP/Src/bsp_OLED.c ****     {
 344              		.loc 1 78 15 discriminator 2 view .LVU60
 345 000a F6B2     		uxtb	r6, r6
 346              	.LVL44:
 347              	.L14:
  78:USER/BSP/Src/bsp_OLED.c ****     {
 348              		.loc 1 78 10 is_stmt 1 discriminator 1 view .LVU61
  78:USER/BSP/Src/bsp_OLED.c ****     {
 349              		.loc 1 78 2 is_stmt 0 discriminator 1 view .LVU62
 350 000c 072E     		cmp	r6, #7
 351 000e 14D8     		bhi	.L19
  80:USER/BSP/Src/bsp_OLED.c **** 		WriteCmd(0x00);		//low column start address
 352              		.loc 1 80 3 is_stmt 1 view .LVU63
 353 0010 A6F15000 		sub	r0, r6, #80
 354 0014 C0B2     		uxtb	r0, r0
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 14


 355 0016 FFF7FEFF 		bl	WriteCmd
 356              	.LVL45:
  81:USER/BSP/Src/bsp_OLED.c **** 		WriteCmd(0x10);		//high column start address
 357              		.loc 1 81 3 view .LVU64
 358 001a 0020     		movs	r0, #0
 359 001c FFF7FEFF 		bl	WriteCmd
 360              	.LVL46:
  82:USER/BSP/Src/bsp_OLED.c **** 		for(n=0;n<128;n++)
 361              		.loc 1 82 3 view .LVU65
 362 0020 1020     		movs	r0, #16
 363 0022 FFF7FEFF 		bl	WriteCmd
 364              	.LVL47:
  83:USER/BSP/Src/bsp_OLED.c ****         {
 365              		.loc 1 83 3 view .LVU66
  83:USER/BSP/Src/bsp_OLED.c ****         {
 366              		.loc 1 83 8 is_stmt 0 view .LVU67
 367 0026 0024     		movs	r4, #0
 368              	.LVL48:
 369              	.L15:
  83:USER/BSP/Src/bsp_OLED.c ****         {
 370              		.loc 1 83 11 is_stmt 1 discriminator 1 view .LVU68
  83:USER/BSP/Src/bsp_OLED.c ****         {
 371              		.loc 1 83 3 is_stmt 0 discriminator 1 view .LVU69
 372 0028 14F0800F 		tst	r4, #128
 373 002c ECD1     		bne	.L20
  85:USER/BSP/Src/bsp_OLED.c **** 		}
 374              		.loc 1 85 4 is_stmt 1 discriminator 3 view .LVU70
 375 002e 2846     		mov	r0, r5
 376 0030 FFF7FEFF 		bl	WriteDat
 377              	.LVL49:
  83:USER/BSP/Src/bsp_OLED.c ****         {
 378              		.loc 1 83 17 discriminator 3 view .LVU71
  83:USER/BSP/Src/bsp_OLED.c ****         {
 379              		.loc 1 83 18 is_stmt 0 discriminator 3 view .LVU72
 380 0034 0134     		adds	r4, r4, #1
 381              	.LVL50:
  83:USER/BSP/Src/bsp_OLED.c ****         {
 382              		.loc 1 83 18 discriminator 3 view .LVU73
 383 0036 E4B2     		uxtb	r4, r4
 384              	.LVL51:
  83:USER/BSP/Src/bsp_OLED.c ****         {
 385              		.loc 1 83 18 discriminator 3 view .LVU74
 386 0038 F6E7     		b	.L15
 387              	.LVL52:
 388              	.L19:
  88:USER/BSP/Src/bsp_OLED.c **** 
 389              		.loc 1 88 1 view .LVU75
 390 003a 70BD     		pop	{r4, r5, r6, pc}
  88:USER/BSP/Src/bsp_OLED.c **** 
 391              		.loc 1 88 1 view .LVU76
 392              		.cfi_endproc
 393              	.LFE132:
 395              		.section	.text.bsp_OLED_CLR,"ax",%progbits
 396              		.align	1
 397              		.global	bsp_OLED_CLR
 398              		.syntax unified
 399              		.thumb
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 15


 400              		.thumb_func
 401              		.fpu fpv4-sp-d16
 403              	bsp_OLED_CLR:
 404              	.LFB133:
  95:USER/BSP/Src/bsp_OLED.c **** 	bsp_OLED_Fill(0x00);
 405              		.loc 1 95 1 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409 0000 08B5     		push	{r3, lr}
 410              	.LCFI9:
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 3, -8
 413              		.cfi_offset 14, -4
  96:USER/BSP/Src/bsp_OLED.c **** }
 414              		.loc 1 96 2 view .LVU78
 415 0002 0020     		movs	r0, #0
 416 0004 FFF7FEFF 		bl	bsp_OLED_Fill
 417              	.LVL53:
  97:USER/BSP/Src/bsp_OLED.c **** 
 418              		.loc 1 97 1 is_stmt 0 view .LVU79
 419 0008 08BD     		pop	{r3, pc}
 420              		.cfi_endproc
 421              	.LFE133:
 423              		.section	.text.bsp_OLED_ON,"ax",%progbits
 424              		.align	1
 425              		.global	bsp_OLED_ON
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 429              		.fpu fpv4-sp-d16
 431              	bsp_OLED_ON:
 432              	.LFB134:
 104:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X8D);  //设置电荷泵
 433              		.loc 1 104 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437 0000 08B5     		push	{r3, lr}
 438              	.LCFI10:
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 3, -8
 441              		.cfi_offset 14, -4
 105:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X14);  //开启电荷泵
 442              		.loc 1 105 2 view .LVU81
 443 0002 8D20     		movs	r0, #141
 444 0004 FFF7FEFF 		bl	WriteCmd
 445              	.LVL54:
 106:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0XAF);  //OLED唤醒
 446              		.loc 1 106 2 view .LVU82
 447 0008 1420     		movs	r0, #20
 448 000a FFF7FEFF 		bl	WriteCmd
 449              	.LVL55:
 107:USER/BSP/Src/bsp_OLED.c **** }
 450              		.loc 1 107 2 view .LVU83
 451 000e AF20     		movs	r0, #175
 452 0010 FFF7FEFF 		bl	WriteCmd
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 16


 453              	.LVL56:
 108:USER/BSP/Src/bsp_OLED.c **** 
 454              		.loc 1 108 1 is_stmt 0 view .LVU84
 455 0014 08BD     		pop	{r3, pc}
 456              		.cfi_endproc
 457              	.LFE134:
 459              		.section	.text.bsp_OLED_OFF,"ax",%progbits
 460              		.align	1
 461              		.global	bsp_OLED_OFF
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv4-sp-d16
 467              	bsp_OLED_OFF:
 468              	.LFB135:
 115:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X8D);  //设置电荷泵
 469              		.loc 1 115 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473 0000 08B5     		push	{r3, lr}
 474              	.LCFI11:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 3, -8
 477              		.cfi_offset 14, -4
 116:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0X10);  //关闭电荷泵
 478              		.loc 1 116 2 view .LVU86
 479 0002 8D20     		movs	r0, #141
 480 0004 FFF7FEFF 		bl	WriteCmd
 481              	.LVL57:
 117:USER/BSP/Src/bsp_OLED.c **** 	WriteCmd(0XAE);  //OLED休眠
 482              		.loc 1 117 2 view .LVU87
 483 0008 1020     		movs	r0, #16
 484 000a FFF7FEFF 		bl	WriteCmd
 485              	.LVL58:
 118:USER/BSP/Src/bsp_OLED.c **** }
 486              		.loc 1 118 2 view .LVU88
 487 000e AE20     		movs	r0, #174
 488 0010 FFF7FEFF 		bl	WriteCmd
 489              	.LVL59:
 119:USER/BSP/Src/bsp_OLED.c **** 
 490              		.loc 1 119 1 is_stmt 0 view .LVU89
 491 0014 08BD     		pop	{r3, pc}
 492              		.cfi_endproc
 493              	.LFE135:
 495              		.section	.text.bsp_OLED_ShowStr,"ax",%progbits
 496              		.align	1
 497              		.global	bsp_OLED_ShowStr
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	bsp_OLED_ShowStr:
 504              	.LVL60:
 505              	.LFB136:
 132:USER/BSP/Src/bsp_OLED.c **** 	unsigned char c = 0,i = 0,j = 0;
 506              		.loc 1 132 1 is_stmt 1 view -0
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 17


 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 132:USER/BSP/Src/bsp_OLED.c **** 	unsigned char c = 0,i = 0,j = 0;
 510              		.loc 1 132 1 is_stmt 0 view .LVU91
 511 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 512              	.LCFI12:
 513              		.cfi_def_cfa_offset 32
 514              		.cfi_offset 3, -32
 515              		.cfi_offset 4, -28
 516              		.cfi_offset 5, -24
 517              		.cfi_offset 6, -20
 518              		.cfi_offset 7, -16
 519              		.cfi_offset 8, -12
 520              		.cfi_offset 9, -8
 521              		.cfi_offset 14, -4
 522 0004 0646     		mov	r6, r0
 523 0006 0F46     		mov	r7, r1
 524 0008 9046     		mov	r8, r2
 133:USER/BSP/Src/bsp_OLED.c **** 	switch(TextSize)
 525              		.loc 1 133 2 is_stmt 1 view .LVU92
 526              	.LVL61:
 134:USER/BSP/Src/bsp_OLED.c ****     {
 527              		.loc 1 134 2 view .LVU93
 528 000a 012B     		cmp	r3, #1
 529 000c 26D0     		beq	.L41
 530 000e 022B     		cmp	r3, #2
 531 0010 5AD0     		beq	.L42
 532              	.LVL62:
 533              	.L27:
 174:USER/BSP/Src/bsp_OLED.c **** 
 534              		.loc 1 174 1 is_stmt 0 view .LVU94
 535 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 536              	.LVL63:
 537              	.L44:
 149:USER/BSP/Src/bsp_OLED.c **** 				j++;
 538              		.loc 1 149 5 is_stmt 1 view .LVU95
 149:USER/BSP/Src/bsp_OLED.c **** 				j++;
 539              		.loc 1 149 7 is_stmt 0 view .LVU96
 540 0016 0636     		adds	r6, r6, #6
 541              	.LVL64:
 149:USER/BSP/Src/bsp_OLED.c **** 				j++;
 542              		.loc 1 149 7 view .LVU97
 543 0018 F6B2     		uxtb	r6, r6
 544              	.LVL65:
 150:USER/BSP/Src/bsp_OLED.c **** 			}
 545              		.loc 1 150 5 is_stmt 1 view .LVU98
 150:USER/BSP/Src/bsp_OLED.c **** 			}
 546              		.loc 1 150 6 is_stmt 0 view .LVU99
 547 001a 09F10109 		add	r9, r9, #1
 548              	.LVL66:
 150:USER/BSP/Src/bsp_OLED.c **** 			}
 549              		.loc 1 150 6 view .LVU100
 550 001e 5FFA89F9 		uxtb	r9, r9
 551              	.LVL67:
 552              	.L28:
 138:USER/BSP/Src/bsp_OLED.c ****             {
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 18


 553              		.loc 1 138 9 is_stmt 1 view .LVU101
 138:USER/BSP/Src/bsp_OLED.c ****             {
 554              		.loc 1 138 12 is_stmt 0 view .LVU102
 555 0022 18F80950 		ldrb	r5, [r8, r9]	@ zero_extendqisi2
 138:USER/BSP/Src/bsp_OLED.c ****             {
 556              		.loc 1 138 9 view .LVU103
 557 0026 002D     		cmp	r5, #0
 558 0028 F3D0     		beq	.L27
 140:USER/BSP/Src/bsp_OLED.c **** 				if(x > 126)
 559              		.loc 1 140 5 is_stmt 1 view .LVU104
 140:USER/BSP/Src/bsp_OLED.c **** 				if(x > 126)
 560              		.loc 1 140 7 is_stmt 0 view .LVU105
 561 002a 203D     		subs	r5, r5, #32
 562 002c EDB2     		uxtb	r5, r5
 563              	.LVL68:
 141:USER/BSP/Src/bsp_OLED.c ****                 {
 564              		.loc 1 141 5 is_stmt 1 view .LVU106
 141:USER/BSP/Src/bsp_OLED.c ****                 {
 565              		.loc 1 141 7 is_stmt 0 view .LVU107
 566 002e 7E2E     		cmp	r6, #126
 567 0030 02D9     		bls	.L31
 143:USER/BSP/Src/bsp_OLED.c **** 					y++;
 568              		.loc 1 143 6 is_stmt 1 view .LVU108
 569              	.LVL69:
 144:USER/BSP/Src/bsp_OLED.c **** 				}
 570              		.loc 1 144 6 view .LVU109
 144:USER/BSP/Src/bsp_OLED.c **** 				}
 571              		.loc 1 144 7 is_stmt 0 view .LVU110
 572 0032 0137     		adds	r7, r7, #1
 573              	.LVL70:
 144:USER/BSP/Src/bsp_OLED.c **** 				}
 574              		.loc 1 144 7 view .LVU111
 575 0034 FFB2     		uxtb	r7, r7
 576              	.LVL71:
 143:USER/BSP/Src/bsp_OLED.c **** 					y++;
 577              		.loc 1 143 8 view .LVU112
 578 0036 0026     		movs	r6, #0
 579              	.LVL72:
 580              	.L31:
 146:USER/BSP/Src/bsp_OLED.c **** 				for(i=0;i<6;i++)
 581              		.loc 1 146 5 is_stmt 1 view .LVU113
 582 0038 3946     		mov	r1, r7
 583 003a 3046     		mov	r0, r6
 584 003c FFF7FEFF 		bl	bsp_OLED_SetPos
 585              	.LVL73:
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 586              		.loc 1 147 5 view .LVU114
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 587              		.loc 1 147 10 is_stmt 0 view .LVU115
 588 0040 0024     		movs	r4, #0
 589              	.LVL74:
 590              	.L32:
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 591              		.loc 1 147 13 is_stmt 1 discriminator 1 view .LVU116
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 592              		.loc 1 147 5 is_stmt 0 discriminator 1 view .LVU117
 593 0042 052C     		cmp	r4, #5
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 19


 594 0044 E7D8     		bhi	.L44
 148:USER/BSP/Src/bsp_OLED.c **** 				x += 6;
 595              		.loc 1 148 6 is_stmt 1 discriminator 3 view .LVU118
 596 0046 05EB4503 		add	r3, r5, r5, lsl #1
 597 004a 214A     		ldr	r2, .L45
 598 004c 02EB4303 		add	r3, r2, r3, lsl #1
 599 0050 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 600 0052 FFF7FEFF 		bl	WriteDat
 601              	.LVL75:
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 602              		.loc 1 147 17 discriminator 3 view .LVU119
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 603              		.loc 1 147 18 is_stmt 0 discriminator 3 view .LVU120
 604 0056 0134     		adds	r4, r4, #1
 605              	.LVL76:
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 606              		.loc 1 147 18 discriminator 3 view .LVU121
 607 0058 E4B2     		uxtb	r4, r4
 608              	.LVL77:
 147:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F6x8[c][i]);
 609              		.loc 1 147 18 discriminator 3 view .LVU122
 610 005a F2E7     		b	.L32
 611              	.LVL78:
 612              	.L41:
 134:USER/BSP/Src/bsp_OLED.c ****     {
 613              		.loc 1 134 2 view .LVU123
 614 005c 4FF00009 		mov	r9, #0
 615 0060 DFE7     		b	.L28
 616              	.LVL79:
 617              	.L37:
 165:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_SetPos(x,y+1);
 618              		.loc 1 165 6 is_stmt 1 discriminator 3 view .LVU124
 165:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_SetPos(x,y+1);
 619              		.loc 1 165 25 is_stmt 0 discriminator 3 view .LVU125
 620 0062 04EB0513 		add	r3, r4, r5, lsl #4
 165:USER/BSP/Src/bsp_OLED.c **** 				bsp_OLED_SetPos(x,y+1);
 621              		.loc 1 165 6 discriminator 3 view .LVU126
 622 0066 1B4A     		ldr	r2, .L45+4
 623 0068 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 624 006a FFF7FEFF 		bl	WriteDat
 625              	.LVL80:
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 626              		.loc 1 164 17 is_stmt 1 discriminator 3 view .LVU127
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 627              		.loc 1 164 18 is_stmt 0 discriminator 3 view .LVU128
 628 006e 0134     		adds	r4, r4, #1
 629              	.LVL81:
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 630              		.loc 1 164 18 discriminator 3 view .LVU129
 631 0070 E4B2     		uxtb	r4, r4
 632              	.LVL82:
 633              	.L36:
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 634              		.loc 1 164 13 is_stmt 1 discriminator 1 view .LVU130
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 635              		.loc 1 164 5 is_stmt 0 discriminator 1 view .LVU131
 636 0072 072C     		cmp	r4, #7
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 20


 637 0074 F5D9     		bls	.L37
 166:USER/BSP/Src/bsp_OLED.c **** 				for(i=0;i<8;i++)
 638              		.loc 1 166 5 is_stmt 1 view .LVU132
 639 0076 791C     		adds	r1, r7, #1
 640 0078 C9B2     		uxtb	r1, r1
 641 007a 3046     		mov	r0, r6
 642 007c FFF7FEFF 		bl	bsp_OLED_SetPos
 643              	.LVL83:
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 644              		.loc 1 167 5 view .LVU133
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 645              		.loc 1 167 10 is_stmt 0 view .LVU134
 646 0080 0024     		movs	r4, #0
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 647              		.loc 1 167 5 view .LVU135
 648 0082 08E0     		b	.L38
 649              	.LVL84:
 650              	.L39:
 168:USER/BSP/Src/bsp_OLED.c **** 				x += 8;
 651              		.loc 1 168 6 is_stmt 1 discriminator 3 view .LVU136
 168:USER/BSP/Src/bsp_OLED.c **** 				x += 8;
 652              		.loc 1 168 25 is_stmt 0 discriminator 3 view .LVU137
 653 0084 04EB0513 		add	r3, r4, r5, lsl #4
 168:USER/BSP/Src/bsp_OLED.c **** 				x += 8;
 654              		.loc 1 168 27 discriminator 3 view .LVU138
 655 0088 0833     		adds	r3, r3, #8
 168:USER/BSP/Src/bsp_OLED.c **** 				x += 8;
 656              		.loc 1 168 6 discriminator 3 view .LVU139
 657 008a 124A     		ldr	r2, .L45+4
 658 008c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 659 008e FFF7FEFF 		bl	WriteDat
 660              	.LVL85:
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 661              		.loc 1 167 17 is_stmt 1 discriminator 3 view .LVU140
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 662              		.loc 1 167 18 is_stmt 0 discriminator 3 view .LVU141
 663 0092 0134     		adds	r4, r4, #1
 664              	.LVL86:
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 665              		.loc 1 167 18 discriminator 3 view .LVU142
 666 0094 E4B2     		uxtb	r4, r4
 667              	.LVL87:
 668              	.L38:
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 669              		.loc 1 167 13 is_stmt 1 discriminator 1 view .LVU143
 167:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i+8]);
 670              		.loc 1 167 5 is_stmt 0 discriminator 1 view .LVU144
 671 0096 072C     		cmp	r4, #7
 672 0098 F4D9     		bls	.L39
 169:USER/BSP/Src/bsp_OLED.c **** 				j++;
 673              		.loc 1 169 5 is_stmt 1 view .LVU145
 169:USER/BSP/Src/bsp_OLED.c **** 				j++;
 674              		.loc 1 169 7 is_stmt 0 view .LVU146
 675 009a 0836     		adds	r6, r6, #8
 676              	.LVL88:
 169:USER/BSP/Src/bsp_OLED.c **** 				j++;
 677              		.loc 1 169 7 view .LVU147
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 21


 678 009c F6B2     		uxtb	r6, r6
 679              	.LVL89:
 170:USER/BSP/Src/bsp_OLED.c **** 			}
 680              		.loc 1 170 5 is_stmt 1 view .LVU148
 170:USER/BSP/Src/bsp_OLED.c **** 			}
 681              		.loc 1 170 6 is_stmt 0 view .LVU149
 682 009e 09F10109 		add	r9, r9, #1
 683              	.LVL90:
 170:USER/BSP/Src/bsp_OLED.c **** 			}
 684              		.loc 1 170 6 view .LVU150
 685 00a2 5FFA89F9 		uxtb	r9, r9
 686              	.LVL91:
 687              	.L29:
 155:USER/BSP/Src/bsp_OLED.c ****             {
 688              		.loc 1 155 9 is_stmt 1 view .LVU151
 155:USER/BSP/Src/bsp_OLED.c ****             {
 689              		.loc 1 155 12 is_stmt 0 view .LVU152
 690 00a6 18F80950 		ldrb	r5, [r8, r9]	@ zero_extendqisi2
 155:USER/BSP/Src/bsp_OLED.c ****             {
 691              		.loc 1 155 9 view .LVU153
 692 00aa 002D     		cmp	r5, #0
 693 00ac B1D0     		beq	.L27
 157:USER/BSP/Src/bsp_OLED.c **** 				if(x > 120)
 694              		.loc 1 157 5 is_stmt 1 view .LVU154
 157:USER/BSP/Src/bsp_OLED.c **** 				if(x > 120)
 695              		.loc 1 157 7 is_stmt 0 view .LVU155
 696 00ae 203D     		subs	r5, r5, #32
 697 00b0 EDB2     		uxtb	r5, r5
 698              	.LVL92:
 158:USER/BSP/Src/bsp_OLED.c ****                 {
 699              		.loc 1 158 5 is_stmt 1 view .LVU156
 158:USER/BSP/Src/bsp_OLED.c ****                 {
 700              		.loc 1 158 7 is_stmt 0 view .LVU157
 701 00b2 782E     		cmp	r6, #120
 702 00b4 02D9     		bls	.L35
 160:USER/BSP/Src/bsp_OLED.c **** 					y++;
 703              		.loc 1 160 6 is_stmt 1 view .LVU158
 704              	.LVL93:
 161:USER/BSP/Src/bsp_OLED.c **** 				}
 705              		.loc 1 161 6 view .LVU159
 161:USER/BSP/Src/bsp_OLED.c **** 				}
 706              		.loc 1 161 7 is_stmt 0 view .LVU160
 707 00b6 0137     		adds	r7, r7, #1
 708              	.LVL94:
 161:USER/BSP/Src/bsp_OLED.c **** 				}
 709              		.loc 1 161 7 view .LVU161
 710 00b8 FFB2     		uxtb	r7, r7
 711              	.LVL95:
 160:USER/BSP/Src/bsp_OLED.c **** 					y++;
 712              		.loc 1 160 8 view .LVU162
 713 00ba 0026     		movs	r6, #0
 714              	.LVL96:
 715              	.L35:
 163:USER/BSP/Src/bsp_OLED.c **** 				for(i=0;i<8;i++)
 716              		.loc 1 163 5 is_stmt 1 view .LVU163
 717 00bc 3946     		mov	r1, r7
 718 00be 3046     		mov	r0, r6
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 22


 719 00c0 FFF7FEFF 		bl	bsp_OLED_SetPos
 720              	.LVL97:
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 721              		.loc 1 164 5 view .LVU164
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 722              		.loc 1 164 10 is_stmt 0 view .LVU165
 723 00c4 0024     		movs	r4, #0
 164:USER/BSP/Src/bsp_OLED.c **** 					WriteDat(F8X16[c*16+i]);
 724              		.loc 1 164 5 view .LVU166
 725 00c6 D4E7     		b	.L36
 726              	.LVL98:
 727              	.L42:
 134:USER/BSP/Src/bsp_OLED.c ****     {
 728              		.loc 1 134 2 view .LVU167
 729 00c8 4FF00009 		mov	r9, #0
 730 00cc EBE7     		b	.L29
 731              	.L46:
 732 00ce 00BF     		.align	2
 733              	.L45:
 734 00d0 00000000 		.word	.LANCHOR0
 735 00d4 00000000 		.word	.LANCHOR1
 736              		.cfi_endproc
 737              	.LFE136:
 739              		.section	.text.bsp_OLED_ShowCN,"ax",%progbits
 740              		.align	1
 741              		.global	bsp_OLED_ShowCN
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	bsp_OLED_ShowCN:
 748              	.LVL99:
 749              	.LFB137:
 185:USER/BSP/Src/bsp_OLED.c **** 	unsigned char wm=0;
 750              		.loc 1 185 1 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 185:USER/BSP/Src/bsp_OLED.c **** 	unsigned char wm=0;
 754              		.loc 1 185 1 is_stmt 0 view .LVU169
 755 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 756              	.LCFI13:
 757              		.cfi_def_cfa_offset 24
 758              		.cfi_offset 3, -24
 759              		.cfi_offset 4, -20
 760              		.cfi_offset 5, -16
 761              		.cfi_offset 6, -12
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 0746     		mov	r7, r0
 765 0004 0E46     		mov	r6, r1
 186:USER/BSP/Src/bsp_OLED.c **** 	unsigned int  adder=32*N;
 766              		.loc 1 186 2 is_stmt 1 view .LVU170
 767              	.LVL100:
 187:USER/BSP/Src/bsp_OLED.c **** 	bsp_OLED_SetPos(x , y);
 768              		.loc 1 187 2 view .LVU171
 187:USER/BSP/Src/bsp_OLED.c **** 	bsp_OLED_SetPos(x , y);
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 23


 769              		.loc 1 187 24 is_stmt 0 view .LVU172
 770 0006 5401     		lsls	r4, r2, #5
 771              	.LVL101:
 188:USER/BSP/Src/bsp_OLED.c **** 	for(wm = 0;wm < 16;wm++)
 772              		.loc 1 188 2 is_stmt 1 view .LVU173
 773 0008 FFF7FEFF 		bl	bsp_OLED_SetPos
 774              	.LVL102:
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 775              		.loc 1 189 2 view .LVU174
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 776              		.loc 1 189 9 is_stmt 0 view .LVU175
 777 000c 0025     		movs	r5, #0
 778              	.LVL103:
 779              	.L48:
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 780              		.loc 1 189 13 is_stmt 1 discriminator 1 view .LVU176
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 781              		.loc 1 189 2 is_stmt 0 discriminator 1 view .LVU177
 782 000e 0F2D     		cmp	r5, #15
 783 0010 07D8     		bhi	.L53
 191:USER/BSP/Src/bsp_OLED.c **** 		adder += 1;
 784              		.loc 1 191 3 is_stmt 1 discriminator 3 view .LVU178
 785 0012 0C4B     		ldr	r3, .L55
 786 0014 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 787 0016 FFF7FEFF 		bl	WriteDat
 788              	.LVL104:
 192:USER/BSP/Src/bsp_OLED.c **** 	}
 789              		.loc 1 192 3 discriminator 3 view .LVU179
 192:USER/BSP/Src/bsp_OLED.c **** 	}
 790              		.loc 1 192 9 is_stmt 0 discriminator 3 view .LVU180
 791 001a 0134     		adds	r4, r4, #1
 792              	.LVL105:
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 793              		.loc 1 189 21 is_stmt 1 discriminator 3 view .LVU181
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 794              		.loc 1 189 23 is_stmt 0 discriminator 3 view .LVU182
 795 001c 0135     		adds	r5, r5, #1
 796              	.LVL106:
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 797              		.loc 1 189 23 discriminator 3 view .LVU183
 798 001e EDB2     		uxtb	r5, r5
 799              	.LVL107:
 189:USER/BSP/Src/bsp_OLED.c **** 	{
 800              		.loc 1 189 23 discriminator 3 view .LVU184
 801 0020 F5E7     		b	.L48
 802              	.L53:
 194:USER/BSP/Src/bsp_OLED.c **** 	for(wm = 0;wm < 16;wm++)
 803              		.loc 1 194 2 is_stmt 1 view .LVU185
 804 0022 711C     		adds	r1, r6, #1
 805 0024 C9B2     		uxtb	r1, r1
 806 0026 3846     		mov	r0, r7
 807 0028 FFF7FEFF 		bl	bsp_OLED_SetPos
 808              	.LVL108:
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 809              		.loc 1 195 2 view .LVU186
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 810              		.loc 1 195 9 is_stmt 0 view .LVU187
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 24


 811 002c 0025     		movs	r5, #0
 812              	.LVL109:
 813              	.L50:
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 814              		.loc 1 195 13 is_stmt 1 discriminator 1 view .LVU188
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 815              		.loc 1 195 2 is_stmt 0 discriminator 1 view .LVU189
 816 002e 0F2D     		cmp	r5, #15
 817 0030 07D8     		bhi	.L54
 197:USER/BSP/Src/bsp_OLED.c **** 		adder += 1;
 818              		.loc 1 197 3 is_stmt 1 discriminator 3 view .LVU190
 819 0032 044B     		ldr	r3, .L55
 820 0034 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 821 0036 FFF7FEFF 		bl	WriteDat
 822              	.LVL110:
 198:USER/BSP/Src/bsp_OLED.c **** 	}
 823              		.loc 1 198 3 discriminator 3 view .LVU191
 198:USER/BSP/Src/bsp_OLED.c **** 	}
 824              		.loc 1 198 9 is_stmt 0 discriminator 3 view .LVU192
 825 003a 0134     		adds	r4, r4, #1
 826              	.LVL111:
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 827              		.loc 1 195 21 is_stmt 1 discriminator 3 view .LVU193
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 828              		.loc 1 195 23 is_stmt 0 discriminator 3 view .LVU194
 829 003c 0135     		adds	r5, r5, #1
 830              	.LVL112:
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 831              		.loc 1 195 23 discriminator 3 view .LVU195
 832 003e EDB2     		uxtb	r5, r5
 833              	.LVL113:
 195:USER/BSP/Src/bsp_OLED.c **** 	{
 834              		.loc 1 195 23 discriminator 3 view .LVU196
 835 0040 F5E7     		b	.L50
 836              	.L54:
 200:USER/BSP/Src/bsp_OLED.c **** 
 837              		.loc 1 200 1 view .LVU197
 838 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 839              	.LVL114:
 840              	.L56:
 200:USER/BSP/Src/bsp_OLED.c **** 
 841              		.loc 1 200 1 view .LVU198
 842              		.align	2
 843              	.L55:
 844 0044 00000000 		.word	.LANCHOR2
 845              		.cfi_endproc
 846              	.LFE137:
 848              		.section	.text.bsp_OLED_ShowCN_STR,"ax",%progbits
 849              		.align	1
 850              		.global	bsp_OLED_ShowCN_STR
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 854              		.fpu fpv4-sp-d16
 856              	bsp_OLED_ShowCN_STR:
 857              	.LVL115:
 858              	.LFB138:
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 25


 212:USER/BSP/Src/bsp_OLED.c **** 	u8 i;
 859              		.loc 1 212 1 is_stmt 1 view -0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 212:USER/BSP/Src/bsp_OLED.c **** 	u8 i;
 863              		.loc 1 212 1 is_stmt 0 view .LVU200
 864 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 865              	.LCFI14:
 866              		.cfi_def_cfa_offset 24
 867              		.cfi_offset 4, -24
 868              		.cfi_offset 5, -20
 869              		.cfi_offset 6, -16
 870              		.cfi_offset 7, -12
 871              		.cfi_offset 8, -8
 872              		.cfi_offset 14, -4
 873 0004 8046     		mov	r8, r0
 874 0006 0F46     		mov	r7, r1
 875 0008 1646     		mov	r6, r2
 876 000a 1D46     		mov	r5, r3
 213:USER/BSP/Src/bsp_OLED.c **** 	for(i=0;i<num;i++)
 877              		.loc 1 213 2 is_stmt 1 view .LVU201
 214:USER/BSP/Src/bsp_OLED.c ****     {
 878              		.loc 1 214 2 view .LVU202
 879              	.LVL116:
 214:USER/BSP/Src/bsp_OLED.c ****     {
 880              		.loc 1 214 7 is_stmt 0 view .LVU203
 881 000c 0024     		movs	r4, #0
 882              	.LVL117:
 883              	.L58:
 214:USER/BSP/Src/bsp_OLED.c ****     {
 884              		.loc 1 214 10 is_stmt 1 discriminator 1 view .LVU204
 214:USER/BSP/Src/bsp_OLED.c ****     {
 885              		.loc 1 214 2 is_stmt 0 discriminator 1 view .LVU205
 886 000e AC42     		cmp	r4, r5
 887 0010 0AD2     		bcs	.L61
 216:USER/BSP/Src/bsp_OLED.c ****     }    //OLED显示标题
 888              		.loc 1 216 9 is_stmt 1 discriminator 3 view .LVU206
 889 0012 A219     		adds	r2, r4, r6
 890 0014 08EB0410 		add	r0, r8, r4, lsl #4
 891 0018 D2B2     		uxtb	r2, r2
 892 001a 3946     		mov	r1, r7
 893 001c C0B2     		uxtb	r0, r0
 894 001e FFF7FEFF 		bl	bsp_OLED_ShowCN
 895              	.LVL118:
 214:USER/BSP/Src/bsp_OLED.c ****     {
 896              		.loc 1 214 16 discriminator 3 view .LVU207
 214:USER/BSP/Src/bsp_OLED.c ****     {
 897              		.loc 1 214 17 is_stmt 0 discriminator 3 view .LVU208
 898 0022 0134     		adds	r4, r4, #1
 899              	.LVL119:
 214:USER/BSP/Src/bsp_OLED.c ****     {
 900              		.loc 1 214 17 discriminator 3 view .LVU209
 901 0024 E4B2     		uxtb	r4, r4
 902              	.LVL120:
 214:USER/BSP/Src/bsp_OLED.c ****     {
 903              		.loc 1 214 17 discriminator 3 view .LVU210
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 26


 904 0026 F2E7     		b	.L58
 905              	.L61:
 218:USER/BSP/Src/bsp_OLED.c **** 
 906              		.loc 1 218 1 view .LVU211
 907 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 218:USER/BSP/Src/bsp_OLED.c **** 
 908              		.loc 1 218 1 view .LVU212
 909              		.cfi_endproc
 910              	.LFE138:
 912              		.section	.text.bsp_OLED_DrawBMP,"ax",%progbits
 913              		.align	1
 914              		.global	bsp_OLED_DrawBMP
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu fpv4-sp-d16
 920              	bsp_OLED_DrawBMP:
 921              	.LVL121:
 922              	.LFB139:
 234:USER/BSP/Src/bsp_OLED.c **** 	unsigned int j=0;
 923              		.loc 1 234 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 4, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 234:USER/BSP/Src/bsp_OLED.c **** 	unsigned int j=0;
 927              		.loc 1 234 1 is_stmt 0 view .LVU214
 928 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 929              	.LCFI15:
 930              		.cfi_def_cfa_offset 40
 931              		.cfi_offset 3, -40
 932              		.cfi_offset 4, -36
 933              		.cfi_offset 5, -32
 934              		.cfi_offset 6, -28
 935              		.cfi_offset 7, -24
 936              		.cfi_offset 8, -20
 937              		.cfi_offset 9, -16
 938              		.cfi_offset 10, -12
 939              		.cfi_offset 11, -8
 940              		.cfi_offset 14, -4
 941 0004 8146     		mov	r9, r0
 942 0006 8846     		mov	r8, r1
 943 0008 1646     		mov	r6, r2
 944 000a 9A46     		mov	r10, r3
 945 000c 0A9F     		ldr	r7, [sp, #40]
 235:USER/BSP/Src/bsp_OLED.c **** 	unsigned char x,y;
 946              		.loc 1 235 2 is_stmt 1 view .LVU215
 947              	.LVL122:
 236:USER/BSP/Src/bsp_OLED.c **** 
 948              		.loc 1 236 2 view .LVU216
 238:USER/BSP/Src/bsp_OLED.c **** 		y = y1/8;
 949              		.loc 1 238 3 view .LVU217
 247:USER/BSP/Src/bsp_OLED.c **** 		}
 950              		.loc 1 247 18 is_stmt 0 view .LVU218
 951 000e 4FF0000B 		mov	fp, #0
 952 0012 0EE0     		b	.L63
 953              	.LVL123:
 954              	.L65:
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 27


 247:USER/BSP/Src/bsp_OLED.c **** 		}
 955              		.loc 1 247 4 is_stmt 1 discriminator 3 view .LVU219
 247:USER/BSP/Src/bsp_OLED.c **** 		}
 956              		.loc 1 247 18 is_stmt 0 discriminator 3 view .LVU220
 957 0014 0BF10105 		add	r5, fp, #1
 958              	.LVL124:
 247:USER/BSP/Src/bsp_OLED.c **** 		}
 959              		.loc 1 247 4 discriminator 3 view .LVU221
 960 0018 17F80B00 		ldrb	r0, [r7, fp]	@ zero_extendqisi2
 961 001c FFF7FEFF 		bl	WriteDat
 962              	.LVL125:
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 963              		.loc 1 245 23 is_stmt 1 discriminator 3 view .LVU222
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 964              		.loc 1 245 24 is_stmt 0 discriminator 3 view .LVU223
 965 0020 0134     		adds	r4, r4, #1
 966              	.LVL126:
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 967              		.loc 1 245 24 discriminator 3 view .LVU224
 968 0022 E4B2     		uxtb	r4, r4
 969              	.LVL127:
 247:USER/BSP/Src/bsp_OLED.c **** 		}
 970              		.loc 1 247 18 discriminator 3 view .LVU225
 971 0024 AB46     		mov	fp, r5
 972              	.LVL128:
 973              	.L64:
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 974              		.loc 1 245 18 is_stmt 1 discriminator 1 view .LVU226
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 975              		.loc 1 245 9 is_stmt 0 discriminator 1 view .LVU227
 976 0026 B442     		cmp	r4, r6
 977 0028 F4D3     		bcc	.L65
 242:USER/BSP/Src/bsp_OLED.c **** 	{
 978              		.loc 1 242 16 is_stmt 1 discriminator 2 view .LVU228
 242:USER/BSP/Src/bsp_OLED.c **** 	{
 979              		.loc 1 242 17 is_stmt 0 discriminator 2 view .LVU229
 980 002a 08F10108 		add	r8, r8, #1
 981              	.LVL129:
 242:USER/BSP/Src/bsp_OLED.c **** 	{
 982              		.loc 1 242 17 discriminator 2 view .LVU230
 983 002e 5FFA88F8 		uxtb	r8, r8
 984              	.LVL130:
 985              	.L63:
 242:USER/BSP/Src/bsp_OLED.c **** 	{
 986              		.loc 1 242 11 is_stmt 1 discriminator 1 view .LVU231
 242:USER/BSP/Src/bsp_OLED.c **** 	{
 987              		.loc 1 242 2 is_stmt 0 discriminator 1 view .LVU232
 988 0032 D045     		cmp	r8, r10
 989 0034 05D2     		bcs	.L68
 244:USER/BSP/Src/bsp_OLED.c ****         for(x=x0;x<x1;x++)
 990              		.loc 1 244 9 is_stmt 1 view .LVU233
 991 0036 4146     		mov	r1, r8
 992 0038 4846     		mov	r0, r9
 993 003a FFF7FEFF 		bl	bsp_OLED_SetPos
 994              	.LVL131:
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 995              		.loc 1 245 9 view .LVU234
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 28


 245:USER/BSP/Src/bsp_OLED.c **** 		{
 996              		.loc 1 245 14 is_stmt 0 view .LVU235
 997 003e 4C46     		mov	r4, r9
 245:USER/BSP/Src/bsp_OLED.c **** 		{
 998              		.loc 1 245 9 view .LVU236
 999 0040 F1E7     		b	.L64
 1000              	.LVL132:
 1001              	.L68:
 250:USER/BSP/Src/bsp_OLED.c **** 
 1002              		.loc 1 250 1 view .LVU237
 1003 0042 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 250:USER/BSP/Src/bsp_OLED.c **** 
 1004              		.loc 1 250 1 view .LVU238
 1005              		.cfi_endproc
 1006              	.LFE139:
 1008              		.section	.text.bsp_OLED_ShowChar,"ax",%progbits
 1009              		.align	1
 1010              		.global	bsp_OLED_ShowChar
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	bsp_OLED_ShowChar:
 1017              	.LVL133:
 1018              	.LFB140:
 261:USER/BSP/Src/bsp_OLED.c **** 	unsigned char c=0,i=0;	
 1019              		.loc 1 261 1 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 261:USER/BSP/Src/bsp_OLED.c **** 	unsigned char c=0,i=0;	
 1023              		.loc 1 261 1 is_stmt 0 view .LVU240
 1024 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1025              	.LCFI16:
 1026              		.cfi_def_cfa_offset 24
 1027              		.cfi_offset 3, -24
 1028              		.cfi_offset 4, -20
 1029              		.cfi_offset 5, -16
 1030              		.cfi_offset 6, -12
 1031              		.cfi_offset 7, -8
 1032              		.cfi_offset 14, -4
 1033 0002 0746     		mov	r7, r0
 1034 0004 0E46     		mov	r6, r1
 262:USER/BSP/Src/bsp_OLED.c **** 	c=chr-' ';//得到偏移后的值			
 1035              		.loc 1 262 2 is_stmt 1 view .LVU241
 1036              	.LVL134:
 263:USER/BSP/Src/bsp_OLED.c **** 	if(x>128-1){x=0;y=y+2;}
 1037              		.loc 1 263 2 view .LVU242
 263:USER/BSP/Src/bsp_OLED.c **** 	if(x>128-1){x=0;y=y+2;}
 1038              		.loc 1 263 3 is_stmt 0 view .LVU243
 1039 0006 203A     		subs	r2, r2, #32
 1040              	.LVL135:
 263:USER/BSP/Src/bsp_OLED.c **** 	if(x>128-1){x=0;y=y+2;}
 1041              		.loc 1 263 3 view .LVU244
 1042 0008 D5B2     		uxtb	r5, r2
 1043              	.LVL136:
 264:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 29


 1044              		.loc 1 264 2 is_stmt 1 view .LVU245
 264:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
 1045              		.loc 1 264 4 is_stmt 0 view .LVU246
 1046 000a 10F0800F 		tst	r0, #128
 1047 000e 13D1     		bne	.L80
 1048              	.LVL137:
 1049              	.L70:
 265:USER/BSP/Src/bsp_OLED.c **** 	{
 1050              		.loc 1 265 2 is_stmt 1 view .LVU247
 265:USER/BSP/Src/bsp_OLED.c **** 	{
 1051              		.loc 1 265 4 is_stmt 0 view .LVU248
 1052 0010 102B     		cmp	r3, #16
 1053 0012 15D0     		beq	.L81
 276:USER/BSP/Src/bsp_OLED.c **** 		for(i=0;i<6;i++)
 1054              		.loc 1 276 3 is_stmt 1 view .LVU249
 1055 0014 3146     		mov	r1, r6
 1056 0016 3846     		mov	r0, r7
 1057 0018 FFF7FEFF 		bl	bsp_OLED_SetPos
 1058              	.LVL138:
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1059              		.loc 1 277 3 view .LVU250
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1060              		.loc 1 277 8 is_stmt 0 view .LVU251
 1061 001c 0024     		movs	r4, #0
 1062              	.LVL139:
 1063              	.L77:
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1064              		.loc 1 277 11 is_stmt 1 discriminator 1 view .LVU252
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1065              		.loc 1 277 3 is_stmt 0 discriminator 1 view .LVU253
 1066 001e 052C     		cmp	r4, #5
 1067 0020 30D8     		bhi	.L69
 278:USER/BSP/Src/bsp_OLED.c **** 	}
 1068              		.loc 1 278 3 is_stmt 1 discriminator 3 view .LVU254
 1069 0022 05EB4503 		add	r3, r5, r5, lsl #1
 1070 0026 184A     		ldr	r2, .L82
 1071 0028 02EB4303 		add	r3, r2, r3, lsl #1
 1072 002c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1073 002e FFF7FEFF 		bl	WriteDat
 1074              	.LVL140:
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1075              		.loc 1 277 15 discriminator 3 view .LVU255
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1076              		.loc 1 277 16 is_stmt 0 discriminator 3 view .LVU256
 1077 0032 0134     		adds	r4, r4, #1
 1078              	.LVL141:
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1079              		.loc 1 277 16 discriminator 3 view .LVU257
 1080 0034 E4B2     		uxtb	r4, r4
 1081              	.LVL142:
 277:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F6x8[c][i]);	
 1082              		.loc 1 277 16 discriminator 3 view .LVU258
 1083 0036 F2E7     		b	.L77
 1084              	.LVL143:
 1085              	.L80:
 264:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
 1086              		.loc 1 264 14 is_stmt 1 discriminator 1 view .LVU259
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 30


 264:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
 1087              		.loc 1 264 18 discriminator 1 view .LVU260
 264:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
 1088              		.loc 1 264 19 is_stmt 0 discriminator 1 view .LVU261
 1089 0038 0236     		adds	r6, r6, #2
 1090 003a F6B2     		uxtb	r6, r6
 1091              	.LVL144:
 264:USER/BSP/Src/bsp_OLED.c **** 	if(Char_Size ==16)
 1092              		.loc 1 264 15 discriminator 1 view .LVU262
 1093 003c 0027     		movs	r7, #0
 1094 003e E7E7     		b	.L70
 1095              	.LVL145:
 1096              	.L81:
 267:USER/BSP/Src/bsp_OLED.c **** 		for(i=0;i<8;i++)
 1097              		.loc 1 267 3 is_stmt 1 view .LVU263
 1098 0040 3146     		mov	r1, r6
 1099 0042 3846     		mov	r0, r7
 1100 0044 FFF7FEFF 		bl	bsp_OLED_SetPos
 1101              	.LVL146:
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1102              		.loc 1 268 3 view .LVU264
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1103              		.loc 1 268 8 is_stmt 0 view .LVU265
 1104 0048 0024     		movs	r4, #0
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1105              		.loc 1 268 3 view .LVU266
 1106 004a 07E0     		b	.L72
 1107              	.LVL147:
 1108              	.L73:
 269:USER/BSP/Src/bsp_OLED.c **** 		bsp_OLED_SetPos(x,y+1);
 1109              		.loc 1 269 3 is_stmt 1 discriminator 3 view .LVU267
 269:USER/BSP/Src/bsp_OLED.c **** 		bsp_OLED_SetPos(x,y+1);
 1110              		.loc 1 269 22 is_stmt 0 discriminator 3 view .LVU268
 1111 004c 04EB0513 		add	r3, r4, r5, lsl #4
 269:USER/BSP/Src/bsp_OLED.c **** 		bsp_OLED_SetPos(x,y+1);
 1112              		.loc 1 269 3 discriminator 3 view .LVU269
 1113 0050 0E4A     		ldr	r2, .L82+4
 1114 0052 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1115 0054 FFF7FEFF 		bl	WriteDat
 1116              	.LVL148:
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1117              		.loc 1 268 15 is_stmt 1 discriminator 3 view .LVU270
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1118              		.loc 1 268 16 is_stmt 0 discriminator 3 view .LVU271
 1119 0058 0134     		adds	r4, r4, #1
 1120              	.LVL149:
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1121              		.loc 1 268 16 discriminator 3 view .LVU272
 1122 005a E4B2     		uxtb	r4, r4
 1123              	.LVL150:
 1124              	.L72:
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1125              		.loc 1 268 11 is_stmt 1 discriminator 1 view .LVU273
 268:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i]);
 1126              		.loc 1 268 3 is_stmt 0 discriminator 1 view .LVU274
 1127 005c 072C     		cmp	r4, #7
 1128 005e F5D9     		bls	.L73
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 31


 270:USER/BSP/Src/bsp_OLED.c **** 		for(i=0;i<8;i++)
 1129              		.loc 1 270 3 is_stmt 1 view .LVU275
 1130 0060 711C     		adds	r1, r6, #1
 1131 0062 C9B2     		uxtb	r1, r1
 1132 0064 3846     		mov	r0, r7
 1133 0066 FFF7FEFF 		bl	bsp_OLED_SetPos
 1134              	.LVL151:
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1135              		.loc 1 271 3 view .LVU276
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1136              		.loc 1 271 8 is_stmt 0 view .LVU277
 1137 006a 0024     		movs	r4, #0
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1138              		.loc 1 271 3 view .LVU278
 1139 006c 08E0     		b	.L74
 1140              	.LVL152:
 1141              	.L75:
 272:USER/BSP/Src/bsp_OLED.c **** 	}
 1142              		.loc 1 272 3 is_stmt 1 discriminator 3 view .LVU279
 272:USER/BSP/Src/bsp_OLED.c **** 	}
 1143              		.loc 1 272 22 is_stmt 0 discriminator 3 view .LVU280
 1144 006e 04EB0513 		add	r3, r4, r5, lsl #4
 272:USER/BSP/Src/bsp_OLED.c **** 	}
 1145              		.loc 1 272 24 discriminator 3 view .LVU281
 1146 0072 0833     		adds	r3, r3, #8
 272:USER/BSP/Src/bsp_OLED.c **** 	}
 1147              		.loc 1 272 3 discriminator 3 view .LVU282
 1148 0074 054A     		ldr	r2, .L82+4
 1149 0076 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1150 0078 FFF7FEFF 		bl	WriteDat
 1151              	.LVL153:
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1152              		.loc 1 271 15 is_stmt 1 discriminator 3 view .LVU283
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1153              		.loc 1 271 16 is_stmt 0 discriminator 3 view .LVU284
 1154 007c 0134     		adds	r4, r4, #1
 1155              	.LVL154:
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1156              		.loc 1 271 16 discriminator 3 view .LVU285
 1157 007e E4B2     		uxtb	r4, r4
 1158              	.LVL155:
 1159              	.L74:
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1160              		.loc 1 271 11 is_stmt 1 discriminator 1 view .LVU286
 271:USER/BSP/Src/bsp_OLED.c **** 		WriteDat(F8X16[c*16+i+8]);
 1161              		.loc 1 271 3 is_stmt 0 discriminator 1 view .LVU287
 1162 0080 072C     		cmp	r4, #7
 1163 0082 F4D9     		bls	.L75
 1164              	.L69:
 280:USER/BSP/Src/bsp_OLED.c **** 
 1165              		.loc 1 280 1 view .LVU288
 1166 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1167              	.LVL156:
 1168              	.L83:
 280:USER/BSP/Src/bsp_OLED.c **** 
 1169              		.loc 1 280 1 view .LVU289
 1170 0086 00BF     		.align	2
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 32


 1171              	.L82:
 1172 0088 00000000 		.word	.LANCHOR0
 1173 008c 00000000 		.word	.LANCHOR1
 1174              		.cfi_endproc
 1175              	.LFE140:
 1177              		.section	.text.bsp_OLED_pow,"ax",%progbits
 1178              		.align	1
 1179              		.global	bsp_OLED_pow
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu fpv4-sp-d16
 1185              	bsp_OLED_pow:
 1186              	.LVL157:
 1187              	.LFB141:
 285:USER/BSP/Src/bsp_OLED.c **** 	u32 result=1;	 
 1188              		.loc 1 285 1 is_stmt 1 view -0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192              		@ link register save eliminated.
 285:USER/BSP/Src/bsp_OLED.c **** 	u32 result=1;	 
 1193              		.loc 1 285 1 is_stmt 0 view .LVU291
 1194 0000 0246     		mov	r2, r0
 286:USER/BSP/Src/bsp_OLED.c **** 	while(n--)result*=m;    
 1195              		.loc 1 286 2 is_stmt 1 view .LVU292
 1196              	.LVL158:
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1197              		.loc 1 287 2 view .LVU293
 286:USER/BSP/Src/bsp_OLED.c **** 	while(n--)result*=m;    
 1198              		.loc 1 286 6 is_stmt 0 view .LVU294
 1199 0002 0120     		movs	r0, #1
 1200              	.LVL159:
 1201              	.L85:
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1202              		.loc 1 287 7 is_stmt 1 discriminator 1 view .LVU295
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1203              		.loc 1 287 9 is_stmt 0 discriminator 1 view .LVU296
 1204 0004 4B1E     		subs	r3, r1, #1
 1205 0006 DBB2     		uxtb	r3, r3
 1206              	.LVL160:
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1207              		.loc 1 287 7 discriminator 1 view .LVU297
 1208 0008 19B1     		cbz	r1, .L87
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1209              		.loc 1 287 12 is_stmt 1 discriminator 2 view .LVU298
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1210              		.loc 1 287 18 is_stmt 0 discriminator 2 view .LVU299
 1211 000a 02FB00F0 		mul	r0, r2, r0
 1212              	.LVL161:
 287:USER/BSP/Src/bsp_OLED.c **** 	return result;
 1213              		.loc 1 287 9 discriminator 2 view .LVU300
 1214 000e 1946     		mov	r1, r3
 1215 0010 F8E7     		b	.L85
 1216              	.L87:
 289:USER/BSP/Src/bsp_OLED.c **** //显示2个数字
 1217              		.loc 1 289 1 view .LVU301
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 33


 1218 0012 7047     		bx	lr
 1219              		.cfi_endproc
 1220              	.LFE141:
 1222              		.section	.text.bsp_OLED_ShowNum,"ax",%progbits
 1223              		.align	1
 1224              		.global	bsp_OLED_ShowNum
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu fpv4-sp-d16
 1230              	bsp_OLED_ShowNum:
 1231              	.LVL162:
 1232              	.LFB142:
 306:USER/BSP/Src/bsp_OLED.c **** 	u8 t,temp;
 1233              		.loc 1 306 1 is_stmt 1 view -0
 1234              		.cfi_startproc
 1235              		@ args = 4, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 306:USER/BSP/Src/bsp_OLED.c **** 	u8 t,temp;
 1237              		.loc 1 306 1 is_stmt 0 view .LVU303
 1238 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1239              	.LCFI17:
 1240              		.cfi_def_cfa_offset 40
 1241              		.cfi_offset 3, -40
 1242              		.cfi_offset 4, -36
 1243              		.cfi_offset 5, -32
 1244              		.cfi_offset 6, -28
 1245              		.cfi_offset 7, -24
 1246              		.cfi_offset 8, -20
 1247              		.cfi_offset 9, -16
 1248              		.cfi_offset 10, -12
 1249              		.cfi_offset 11, -8
 1250              		.cfi_offset 14, -4
 1251 0004 8346     		mov	fp, r0
 1252 0006 8A46     		mov	r10, r1
 1253 0008 9146     		mov	r9, r2
 1254 000a 1E46     		mov	r6, r3
 1255 000c 9DF82870 		ldrb	r7, [sp, #40]	@ zero_extendqisi2
 307:USER/BSP/Src/bsp_OLED.c **** 	u8 enshow=0;						   
 1256              		.loc 1 307 2 is_stmt 1 view .LVU304
 308:USER/BSP/Src/bsp_OLED.c **** 	for(t=0;t<len;t++)
 1257              		.loc 1 308 2 view .LVU305
 1258              	.LVL163:
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1259              		.loc 1 309 2 view .LVU306
 308:USER/BSP/Src/bsp_OLED.c **** 	for(t=0;t<len;t++)
 1260              		.loc 1 308 5 is_stmt 0 view .LVU307
 1261 0010 4FF00008 		mov	r8, #0
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1262              		.loc 1 309 7 view .LVU308
 1263 0014 4546     		mov	r5, r8
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1264              		.loc 1 309 2 view .LVU309
 1265 0016 19E0     		b	.L89
 1266              	.LVL164:
 1267              	.L96:
 316:USER/BSP/Src/bsp_OLED.c **** 				continue;
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 34


 1268              		.loc 1 316 5 is_stmt 1 view .LVU310
 316:USER/BSP/Src/bsp_OLED.c **** 				continue;
 1269              		.loc 1 316 34 is_stmt 0 view .LVU311
 1270 0018 7808     		lsrs	r0, r7, #1
 1271 001a 10FB05F0 		smulbb	r0, r0, r5
 316:USER/BSP/Src/bsp_OLED.c **** 				continue;
 1272              		.loc 1 316 5 view .LVU312
 1273 001e 5BFA80F0 		uxtab	r0, fp, r0
 1274 0022 3B46     		mov	r3, r7
 1275 0024 2022     		movs	r2, #32
 1276 0026 5146     		mov	r1, r10
 1277 0028 C0B2     		uxtb	r0, r0
 1278 002a FFF7FEFF 		bl	bsp_OLED_ShowChar
 1279              	.LVL165:
 317:USER/BSP/Src/bsp_OLED.c **** 			}else enshow=1; 
 1280              		.loc 1 317 5 is_stmt 1 view .LVU313
 1281 002e 0BE0     		b	.L91
 1282              	.LVL166:
 1283              	.L90:
 320:USER/BSP/Src/bsp_OLED.c **** 	}
 1284              		.loc 1 320 4 view .LVU314
 320:USER/BSP/Src/bsp_OLED.c **** 	}
 1285              		.loc 1 320 33 is_stmt 0 view .LVU315
 1286 0030 7808     		lsrs	r0, r7, #1
 1287 0032 10FB05F0 		smulbb	r0, r0, r5
 320:USER/BSP/Src/bsp_OLED.c **** 	}
 1288              		.loc 1 320 4 view .LVU316
 1289 0036 3034     		adds	r4, r4, #48
 1290              	.LVL167:
 320:USER/BSP/Src/bsp_OLED.c **** 	}
 1291              		.loc 1 320 4 view .LVU317
 1292 0038 5BFA80F0 		uxtab	r0, fp, r0
 1293 003c 3B46     		mov	r3, r7
 1294 003e E2B2     		uxtb	r2, r4
 1295 0040 5146     		mov	r1, r10
 1296 0042 C0B2     		uxtb	r0, r0
 1297 0044 FFF7FEFF 		bl	bsp_OLED_ShowChar
 1298              	.LVL168:
 1299              	.L91:
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1300              		.loc 1 309 16 is_stmt 1 discriminator 2 view .LVU318
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1301              		.loc 1 309 17 is_stmt 0 discriminator 2 view .LVU319
 1302 0048 0135     		adds	r5, r5, #1
 1303              	.LVL169:
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1304              		.loc 1 309 17 discriminator 2 view .LVU320
 1305 004a EDB2     		uxtb	r5, r5
 1306              	.LVL170:
 1307              	.L89:
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1308              		.loc 1 309 10 is_stmt 1 discriminator 1 view .LVU321
 309:USER/BSP/Src/bsp_OLED.c **** 	{
 1309              		.loc 1 309 2 is_stmt 0 discriminator 1 view .LVU322
 1310 004c B542     		cmp	r5, r6
 1311 004e 1CD2     		bcs	.L95
 311:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 35


 1312              		.loc 1 311 3 is_stmt 1 view .LVU323
 311:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
 1313              		.loc 1 311 32 is_stmt 0 view .LVU324
 1314 0050 711B     		subs	r1, r6, r5
 1315 0052 C9B2     		uxtb	r1, r1
 311:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
 1316              		.loc 1 311 13 view .LVU325
 1317 0054 0139     		subs	r1, r1, #1
 1318 0056 C9B2     		uxtb	r1, r1
 1319 0058 0A20     		movs	r0, #10
 1320 005a FFF7FEFF 		bl	bsp_OLED_pow
 1321              	.LVL171:
 311:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
 1322              		.loc 1 311 12 view .LVU326
 1323 005e B9FBF0F0 		udiv	r0, r9, r0
 311:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
 1324              		.loc 1 311 38 view .LVU327
 1325 0062 0B4C     		ldr	r4, .L97
 1326 0064 A4FB0034 		umull	r3, r4, r4, r0
 1327 0068 E408     		lsrs	r4, r4, #3
 1328 006a 04EB8404 		add	r4, r4, r4, lsl #2
 1329 006e A0EB4404 		sub	r4, r0, r4, lsl #1
 311:USER/BSP/Src/bsp_OLED.c **** 		if(enshow==0&&t<(len-1))
 1330              		.loc 1 311 7 view .LVU328
 1331 0072 E4B2     		uxtb	r4, r4
 1332              	.LVL172:
 312:USER/BSP/Src/bsp_OLED.c **** 		{
 1333              		.loc 1 312 3 is_stmt 1 view .LVU329
 312:USER/BSP/Src/bsp_OLED.c **** 		{
 1334              		.loc 1 312 5 is_stmt 0 view .LVU330
 1335 0074 B8F1000F 		cmp	r8, #0
 1336 0078 DAD1     		bne	.L90
 312:USER/BSP/Src/bsp_OLED.c **** 		{
 1337              		.loc 1 312 23 discriminator 1 view .LVU331
 1338 007a 731E     		subs	r3, r6, #1
 312:USER/BSP/Src/bsp_OLED.c **** 		{
 1339              		.loc 1 312 15 discriminator 1 view .LVU332
 1340 007c 9D42     		cmp	r5, r3
 1341 007e D7DA     		bge	.L90
 314:USER/BSP/Src/bsp_OLED.c **** 			{
 1342              		.loc 1 314 4 is_stmt 1 view .LVU333
 314:USER/BSP/Src/bsp_OLED.c **** 			{
 1343              		.loc 1 314 6 is_stmt 0 view .LVU334
 1344 0080 002C     		cmp	r4, #0
 1345 0082 C9D0     		beq	.L96
 318:USER/BSP/Src/bsp_OLED.c **** 		}
 1346              		.loc 1 318 16 view .LVU335
 1347 0084 4FF00108 		mov	r8, #1
 1348              	.LVL173:
 318:USER/BSP/Src/bsp_OLED.c **** 		}
 1349              		.loc 1 318 16 view .LVU336
 1350 0088 D2E7     		b	.L90
 1351              	.LVL174:
 1352              	.L95:
 322:USER/BSP/Src/bsp_OLED.c **** 
 1353              		.loc 1 322 1 view .LVU337
 1354 008a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 36


 1355              	.LVL175:
 1356              	.L98:
 322:USER/BSP/Src/bsp_OLED.c **** 
 1357              		.loc 1 322 1 view .LVU338
 1358 008e 00BF     		.align	2
 1359              	.L97:
 1360 0090 CDCCCCCC 		.word	-858993459
 1361              		.cfi_endproc
 1362              	.LFE142:
 1364              		.global	F8X16
 1365              		.global	F6x8
 1366              		.global	F16x16
 1367              		.section	.data.F16x16,"aw"
 1368              		.align	2
 1369              		.set	.LANCHOR2,. + 0
 1372              	F16x16:
 1373 0000 0000FE12 		.ascii	"\000\000\376\022\222\262\322\222\222\222\322\262\236"
 1373      92B2D292 
 1373      9292D2B2 
 1373      9E
 1374 000d 00000040 		.ascii	"\000\000\000@0\017\004\204d\037\004\004\004\377\004"
 1374      300F0484 
 1374      641F0404 
 1374      04FF04
 1375 001c 04040000 		.ascii	"\004\004\000\000\000\002\002\372\252\257\252\252\252"
 1375      000202FA 
 1375      AAAFAAAA 
 1375      AA
 1376 0029 AFAAFA02 		.ascii	"\257\252\372\002\002\000\000\022\022\012~\012\013\012"
 1376      02000012 
 1376      120A7E0A 
 1376      0B0A
 1377 0037 FE0A2A4A 		.ascii	"\376\012*J>\012\022\022\000\020`\002\214\000\376\002"
 1377      3E0A1212 
 1377      00106002 
 1377      8C00FE02 
 1378 0047 F202FE00 		.ascii	"\362\002\376\000\370\000\377\000\000\004\004~\001\200"
 1378      F800FF00 
 1378      0004047E 
 1378      0180
 1379 0055 47300F10 		.ascii	"G0\017\020'\000G\200\177\000\000@@B\314\000\220\220"
 1379      27004780 
 1379      7F000040 
 1379      4042CC00 
 1379      9090
 1380 0067 909090FF 		.ascii	"\220\220\220\377\020\021\026\020\000\000\000\000?\020"
 1380      10111610 
 1380      00000000 
 1380      3F10
 1381 0075 28603F10 		.ascii	"(`?\020\020\001\0160@\360\000@B\314\000\000DTTT\177"
 1381      10010E30 
 1381      40F00040 
 1381      42CC0000 
 1381      44545454 
 1382 008a 54545444 		.ascii	"TTTD@\000\000\000\177 \020\000\377\025\025\025U\225"
 1382      40000000 
 1382      7F201000 
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 37


 1382      FF151515 
 1382      5595
 1383 009c 7F000000 		.ascii	"\177\000\000\000 \"**\252j:.)))))  \000\010\004\002"
 1383      20222A2A 
 1383      AA6A3A2E 
 1383      29292929 
 1383      29202000 
 1384 00b3 01FF5555 		.ascii	"\001\377UUUUUU\377\000\000\000\000\000\376\002B\"2^"
 1384      55555555 
 1384      FF000000 
 1384      0000FE02 
 1384      4222325E 
 1385 00c7 92523212 		.ascii	"\222R2\022\002\002\376\000\000\000\377BBBQUdiABBB\377"
 1385      0202FE00 
 1385      0000FF42 
 1385      42425155 
 1385      64694142 
 1386 00de 00000000 		.ascii	"\000\000\000\000\000\376     ?    \000\000\000\200`"
 1386      00FE2020 
 1386      2020203F 
 1386      20202020 
 1386      00000080 
 1387 00f3 1F020202 		.ascii	"\037\002\002\002\002\002\002\376\000\000\000\000\000"
 1387      020202FE 
 1387      00000000 
 1387      00
 1388              		.section	.rodata.F6x8,"a"
 1389              		.align	2
 1390              		.set	.LANCHOR0,. + 0
 1393              	F6x8:
 1394 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 1394      0000
 1395 0006 0000002F 		.ascii	"\000\000\000/\000\000"
 1395      0000
 1396 000c 00000700 		.ascii	"\000\000\007\000\007\000"
 1396      0700
 1397 0012 00147F14 		.ascii	"\000\024\177\024\177\024"
 1397      7F14
 1398 0018 00242A7F 		.ascii	"\000$*\177*\022"
 1398      2A12
 1399 001e 00626408 		.ascii	"\000bd\010\023#"
 1399      1323
 1400 0024 00364955 		.ascii	"\0006IU\"P"
 1400      2250
 1401 002a 00000503 		.ascii	"\000\000\005\003\000\000"
 1401      0000
 1402 0030 00001C22 		.ascii	"\000\000\034\"A\000"
 1402      4100
 1403 0036 00004122 		.ascii	"\000\000A\"\034\000"
 1403      1C00
 1404 003c 0014083E 		.ascii	"\000\024\010>\010\024"
 1404      0814
 1405 0042 0008083E 		.ascii	"\000\010\010>\010\010"
 1405      0808
 1406 0048 000000A0 		.ascii	"\000\000\000\240`\000"
 1406      6000
 1407 004e 00080808 		.ascii	"\000\010\010\010\010\010"
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 38


 1407      0808
 1408 0054 00006060 		.ascii	"\000\000``\000\000"
 1408      0000
 1409 005a 00201008 		.ascii	"\000 \020\010\004\002"
 1409      0402
 1410 0060 003E5149 		.ascii	"\000>QIE>"
 1410      453E
 1411 0066 0000427F 		.ascii	"\000\000B\177@\000"
 1411      4000
 1412 006c 00426151 		.ascii	"\000BaQIF"
 1412      4946
 1413 0072 00214145 		.ascii	"\000!AEK1"
 1413      4B31
 1414 0078 00181412 		.ascii	"\000\030\024\022\177\020"
 1414      7F10
 1415 007e 00274545 		.ascii	"\000'EEE9"
 1415      4539
 1416 0084 003C4A49 		.ascii	"\000<JII0"
 1416      4930
 1417 008a 00017109 		.ascii	"\000\001q\011\005\003"
 1417      0503
 1418 0090 00364949 		.ascii	"\0006III6"
 1418      4936
 1419 0096 00064949 		.ascii	"\000\006II)\036"
 1419      291E
 1420 009c 00003636 		.ascii	"\000\00066\000\000"
 1420      0000
 1421 00a2 00005636 		.ascii	"\000\000V6\000\000"
 1421      0000
 1422 00a8 00081422 		.ascii	"\000\010\024\"A\000"
 1422      4100
 1423 00ae 00141414 		.ascii	"\000\024\024\024\024\024"
 1423      1414
 1424 00b4 00004122 		.ascii	"\000\000A\"\024\010"
 1424      1408
 1425 00ba 00020151 		.ascii	"\000\002\001Q\011\006"
 1425      0906
 1426 00c0 00324959 		.ascii	"\0002IYQ>"
 1426      513E
 1427 00c6 007C1211 		.ascii	"\000|\022\021\022|"
 1427      127C
 1428 00cc 007F4949 		.ascii	"\000\177III6"
 1428      4936
 1429 00d2 003E4141 		.ascii	"\000>AAA\""
 1429      4122
 1430 00d8 007F4141 		.ascii	"\000\177AA\"\034"
 1430      221C
 1431 00de 007F4949 		.ascii	"\000\177IIIA"
 1431      4941
 1432 00e4 007F0909 		.ascii	"\000\177\011\011\011\001"
 1432      0901
 1433 00ea 003E4149 		.ascii	"\000>AIIz"
 1433      497A
 1434 00f0 007F0808 		.ascii	"\000\177\010\010\010\177"
 1434      087F
 1435 00f6 0000417F 		.ascii	"\000\000A\177A\000"
 1435      4100
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 39


 1436 00fc 00204041 		.ascii	"\000 @A?\001"
 1436      3F01
 1437 0102 007F0814 		.ascii	"\000\177\010\024\"A"
 1437      2241
 1438 0108 007F4040 		.ascii	"\000\177@@@@"
 1438      4040
 1439 010e 007F020C 		.ascii	"\000\177\002\014\002\177"
 1439      027F
 1440 0114 007F0408 		.ascii	"\000\177\004\010\020\177"
 1440      107F
 1441 011a 003E4141 		.ascii	"\000>AAA>"
 1441      413E
 1442 0120 007F0909 		.ascii	"\000\177\011\011\011\006"
 1442      0906
 1443 0126 003E4151 		.ascii	"\000>AQ!^"
 1443      215E
 1444 012c 007F0919 		.ascii	"\000\177\011\031)F"
 1444      2946
 1445 0132 00464949 		.ascii	"\000FIII1"
 1445      4931
 1446 0138 0001017F 		.ascii	"\000\001\001\177\001\001"
 1446      0101
 1447 013e 003F4040 		.ascii	"\000?@@@?"
 1447      403F
 1448 0144 001F2040 		.ascii	"\000\037 @ \037"
 1448      201F
 1449 014a 003F4038 		.ascii	"\000?@8@?"
 1449      403F
 1450 0150 00631408 		.ascii	"\000c\024\010\024c"
 1450      1463
 1451 0156 00070870 		.ascii	"\000\007\010p\010\007"
 1451      0807
 1452 015c 00615149 		.ascii	"\000aQIEC"
 1452      4543
 1453 0162 00007F41 		.ascii	"\000\000\177AA\000"
 1453      4100
 1454 0168 00552A55 		.ascii	"\000U*U*U"
 1454      2A55
 1455 016e 00004141 		.ascii	"\000\000AA\177\000"
 1455      7F00
 1456 0174 00040201 		.ascii	"\000\004\002\001\002\004"
 1456      0204
 1457 017a 00404040 		.ascii	"\000@@@@@"
 1457      4040
 1458 0180 00000102 		.ascii	"\000\000\001\002\004\000"
 1458      0400
 1459 0186 00205454 		.ascii	"\000 TTTx"
 1459      5478
 1460 018c 007F4844 		.ascii	"\000\177HDD8"
 1460      4438
 1461 0192 00384444 		.ascii	"\0008DDD "
 1461      4420
 1462 0198 00384444 		.ascii	"\0008DDH\177"
 1462      487F
 1463 019e 00385454 		.ascii	"\0008TTT\030"
 1463      5418
 1464 01a4 00087E09 		.ascii	"\000\010~\011\001\002"
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 40


 1464      0102
 1465 01aa 0018A4A4 		.ascii	"\000\030\244\244\244|"
 1465      A47C
 1466 01b0 007F0804 		.ascii	"\000\177\010\004\004x"
 1466      0478
 1467 01b6 0000447D 		.ascii	"\000\000D}@\000"
 1467      4000
 1468 01bc 00408084 		.ascii	"\000@\200\204}\000"
 1468      7D00
 1469 01c2 007F1028 		.ascii	"\000\177\020(D\000"
 1469      4400
 1470 01c8 0000417F 		.ascii	"\000\000A\177@\000"
 1470      4000
 1471 01ce 007C0418 		.ascii	"\000|\004\030\004x"
 1471      0478
 1472 01d4 007C0804 		.ascii	"\000|\010\004\004x"
 1472      0478
 1473 01da 00384444 		.ascii	"\0008DDD8"
 1473      4438
 1474 01e0 00FC2424 		.ascii	"\000\374$$$\030"
 1474      2418
 1475 01e6 00182424 		.ascii	"\000\030$$\030\374"
 1475      18FC
 1476 01ec 007C0804 		.ascii	"\000|\010\004\004\010"
 1476      0408
 1477 01f2 00485454 		.ascii	"\000HTTT "
 1477      5420
 1478 01f8 00043F44 		.ascii	"\000\004?D@ "
 1478      4020
 1479 01fe 003C4040 		.ascii	"\000<@@ |"
 1479      207C
 1480 0204 001C2040 		.ascii	"\000\034 @ \034"
 1480      201C
 1481 020a 003C4030 		.ascii	"\000<@0@<"
 1481      403C
 1482 0210 00442810 		.ascii	"\000D(\020(D"
 1482      2844
 1483 0216 001CA0A0 		.ascii	"\000\034\240\240\240|"
 1483      A07C
 1484 021c 00446454 		.ascii	"\000DdTLD"
 1484      4C44
 1485 0222 14141414 		.ascii	"\024\024\024\024\024\024"
 1485      1414
 1486              		.section	.rodata.F8X16,"a"
 1487              		.align	2
 1488              		.set	.LANCHOR1,. + 0
 1491              	F8X16:
 1492 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1492      00000000 
 1492      00000000 
 1492      00
 1493 000d 00000000 		.ascii	"\000\000\000\000\000\000\370\000\000\000\000\000\000"
 1493      0000F800 
 1493      00000000 
 1493      00
 1494 001a 00333000 		.ascii	"\00030\000\000\000\000\020\014\006\020\014\006\000\000"
 1494      00000010 
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 41


 1494      0C06100C 
 1494      060000
 1495 0029 00000000 		.ascii	"\000\000\000\000\000\000\000@\300x@\300x@\000\004?\004"
 1495      00000040 
 1495      C07840C0 
 1495      78400004 
 1495      3F04
 1496 003b 043F0404 		.ascii	"\004?\004\004\000\000p\210\374\0100\000\000\000\030"
 1496      00007088 
 1496      FC083000 
 1496      000018
 1497 004a 20FF211E 		.ascii	" \377!\036\000\000\360\010\360\000\340\030\000\000\000"
 1497      0000F008 
 1497      F000E018 
 1497      000000
 1498 0059 211C031E 		.ascii	"!\034\003\036!\036\000\000\360\010\210p\000\000\000"
 1498      211E0000 
 1498      F0088870 
 1498      000000
 1499 0068 1E212324 		.ascii	"\036!#$\031'!\020\020\026\016\000\000\000\000\000\000"
 1499      19272110 
 1499      10160E00 
 1499      00000000 
 1499      00
 1500 0079 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\340\030\004"
 1500      00000000 
 1500      0000E018 
 1500      04
 1501 0086 02000000 		.ascii	"\002\000\000\000\000\007\030 @\000\000\002\004\030\340"
 1501      00071820 
 1501      40000002 
 1501      0418E0
 1502 0095 00000000 		.ascii	"\000\000\000\000@ \030\007\000\000\000@@\200\360\200"
 1502      40201807 
 1502      00000040 
 1502      4080F080 
 1503 00a5 40400002 		.ascii	"@@\000\002\002\001\017\001\002\002\000\000\000\000\360"
 1503      02010F01 
 1503      02020000 
 1503      0000F0
 1504 00b4 00000000 		.ascii	"\000\000\000\000\001\001\001\037\001\001\001\000\000"
 1504      0101011F 
 1504      01010100 
 1504      00
 1505 00c1 00000000 		.ascii	"\000\000\000\000\000\000\000\200\260p\000\000\000\000"
 1505      00000080 
 1505      B0700000 
 1505      0000
 1506 00cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\001\001\001"
 1506      00000000 
 1506      00000101 
 1506      01
 1507 00dc 01010101 		.ascii	"\001\001\001\001\000\000\000\000\000\000\000\000\000"
 1507      00000000 
 1507      00000000 
 1507      00
 1508 00e9 30300000 		.ascii	"00\000\000\000\000\000\000\000\000\000\200`\030\004"
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 42


 1508      00000000 
 1508      00000080 
 1508      601804
 1509 00f8 00601806 		.ascii	"\000`\030\006\001\000\000\000\000\340\020\010\010\020"
 1509      01000000 
 1509      00E01008 
 1509      0810
 1510 0106 E000000F 		.ascii	"\340\000\000\017\020  \020\017\000\000\020\020\370\000"
 1510      10202010 
 1510      0F000010 
 1510      10F800
 1511 0115 00000000 		.ascii	"\000\000\000\000  ?  \000\000\000p\010\010\010\210p"
 1511      20203F20 
 1511      20000000 
 1511      70080808 
 1511      8870
 1512 0127 00003028 		.ascii	"\000\0000($\"!0\000\0000\010\210\210H0\000\000\030 "
 1512      24222130 
 1512      00003008 
 1512      88884830 
 1512      00001820 
 1513 013b 2020110E 		.ascii	"  \021\016\000\000\000\300 \020\370\000\000\000\007"
 1513      000000C0 
 1513      2010F800 
 1513      000007
 1514 014a 0424243F 		.ascii	"\004$$?$\000\000\370\010\210\210\010\010\000\000\031"
 1514      240000F8 
 1514      08888808 
 1514      08000019 
 1515 015a 21202011 		.ascii	"!  \021\016\000\000\340\020\210\210\030\000\000\000"
 1515      0E0000E0 
 1515      10888818 
 1515      000000
 1516 0169 0F112020 		.ascii	"\017\021  \021\016\000\0008\010\010\3108\010\000\000"
 1516      110E0000 
 1516      380808C8 
 1516      38080000 
 1517 0179 00003F00 		.ascii	"\000\000?\000\000\000\000\000p\210\010\010\210p\000"
 1517      00000000 
 1517      70880808 
 1517      887000
 1518 0188 001C2221 		.ascii	"\000\034\"!!\"\034\000\000\340\020\010\010\020\340\000"
 1518      21221C00 
 1518      00E01008 
 1518      0810E000 
 1519 0198 00003122 		.ascii	"\000\0001\"\"\021\017\000\000\000\000\300\300\000\000"
 1519      22110F00 
 1519      000000C0 
 1519      C00000
 1520 01a7 00000000 		.ascii	"\000\000\000\00000\000\000\000\000\000\000\200\000\000"
 1520      30300000 
 1520      00000000 
 1520      800000
 1521 01b6 00000000 		.ascii	"\000\000\000\000\200`\000\000\000\000\000\000\200@ "
 1521      80600000 
 1521      00000000 
 1521      804020
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 43


 1522 01c5 10080000 		.ascii	"\020\010\000\000\001\002\004\010\020 \000@@@@@@@\000"
 1522      01020408 
 1522      10200040 
 1522      40404040 
 1522      404000
 1523 01d8 04040404 		.ascii	"\004\004\004\004\004\004\004\000\000\010\020 @\200\000"
 1523      04040400 
 1523      00081020 
 1523      408000
 1524 01e7 00002010 		.ascii	"\000\000 \020\010\004\002\001\000\000pH\010\010\010"
 1524      08040201 
 1524      00007048 
 1524      080808
 1525 01f6 F0000000 		.ascii	"\360\000\000\000\00006\001\000\000\3000\310(\350\020"
 1525      00303601 
 1525      0000C030 
 1525      C828E810 
 1526 0206 E0000718 		.ascii	"\340\000\007\030'$#\024\013\000\000\000\3008\340\000"
 1526      27242314 
 1526      0B000000 
 1526      C038E000 
 1527 0216 0000203C 		.ascii	"\000\000 <#\002\002'8 \010\370\210\210\210p\000\000"
 1527      23020227 
 1527      382008F8 
 1527      88888870 
 1527      0000
 1528 0228 203F2020 		.ascii	" ?   \021\016\000\3000\010\010\010\0108\000\007\030"
 1528      20110E00 
 1528      C0300808 
 1528      08083800 
 1528      0718
 1529 023a 20202010 		.ascii	"   \020\010\000\010\370\010\010\010\020\340\000 ?  "
 1529      080008F8 
 1529      08080810 
 1529      E000203F 
 1529      2020
 1530 024c 20100F00 		.ascii	" \020\017\000\010\370\210\210\350\010\020\000 ?  # "
 1530      08F88888 
 1530      E8081000 
 1530      203F2020 
 1530      2320
 1531 025e 180008F8 		.ascii	"\030\000\010\370\210\210\350\010\020\000 ? \000\003"
 1531      8888E808 
 1531      1000203F 
 1531      200003
 1532 026d 000000C0 		.ascii	"\000\000\000\3000\010\010\0108\000\000\007\030  \"\036"
 1532      30080808 
 1532      38000007 
 1532      18202022 
 1532      1E
 1533 027e 020008F8 		.ascii	"\002\000\010\370\010\000\000\010\370\010 ?!\001\001"
 1533      08000008 
 1533      F808203F 
 1533      210101
 1534 028d 213F2000 		.ascii	"!? \000\010\010\370\010\010\000\000\000  ?  \000\000"
 1534      0808F808 
 1534      08000000 
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 44


 1534      20203F20 
 1534      200000
 1535 02a0 00000808 		.ascii	"\000\000\010\010\370\010\010\000\300\200\200\200\177"
 1535      F8080800 
 1535      C0808080 
 1535      7F
 1536 02ad 00000008 		.ascii	"\000\000\000\010\370\210\300(\030\010\000 ? \001&8 "
 1536      F888C028 
 1536      18080020 
 1536      3F200126 
 1536      3820
 1537 02bf 0008F808 		.ascii	"\000\010\370\010\000\000\000\000\000 ?    0\000\010"
 1537      00000000 
 1537      00203F20 
 1537      20202030 
 1537      0008
 1538 02d1 F8F800F8 		.ascii	"\370\370\000\370\370\010\000 ?\000?\000? \000\010\370"
 1538      F8080020 
 1538      3F003F00 
 1538      3F200008 
 1538      F8
 1539 02e2 30C00008 		.ascii	"0\300\000\010\370\010 ? \000\007\030?\000\340\020\010"
 1539      F808203F 
 1539      20000718 
 1539      3F00E010 
 1539      08
 1540 02f3 080810E0 		.ascii	"\010\010\020\340\000\017\020   \020\017\000\010\370"
 1540      000F1020 
 1540      2020100F 
 1540      0008F8
 1541 0302 08080808 		.ascii	"\010\010\010\010\360\000 ?!\001\001\001\000\000\340"
 1541      F000203F 
 1541      21010101 
 1541      0000E0
 1542 0311 10080808 		.ascii	"\020\010\010\010\020\340\000\017\030$$8PO\000\010\370"
 1542      10E0000F 
 1542      18242438 
 1542      504F0008 
 1542      F8
 1543 0322 88888888 		.ascii	"\210\210\210\210p\000 ? \000\003\0140 \000p\210\010"
 1543      7000203F 
 1543      2000030C 
 1543      30200070 
 1543      8808
 1544 0334 08083800 		.ascii	"\010\0108\000\0008 !!\"\034\000\030\010\010\370\010"
 1544      00382021 
 1544      21221C00 
 1544      180808F8 
 1544      08
 1545 0345 08180000 		.ascii	"\010\030\000\000\000 ? \000\000\000\010\370\010\000"
 1545      00203F20 
 1545      00000008 
 1545      F80800
 1546 0354 0008F808 		.ascii	"\000\010\370\010\000\037    \037\000\010x\210\000\000"
 1546      001F2020 
 1546      20201F00 
 1546      08788800 
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 45


 1546      00
 1547 0365 C8380800 		.ascii	"\3108\010\000\000\0078\016\001\000\000\370\010\000\370"
 1547      0007380E 
 1547      010000F8 
 1547      0800F8
 1548 0374 0008F800 		.ascii	"\000\010\370\000\003<\007\000\007<\003\000\010\030h"
 1548      033C0700 
 1548      073C0300 
 1548      081868
 1549 0383 80806818 		.ascii	"\200\200h\030\010 0,\003\003,0 \0108\310\000\3108\010"
 1549      0820302C 
 1549      03032C30 
 1549      200838C8 
 1549      00C83808 
 1550 0397 00000020 		.ascii	"\000\000\000 ? \000\000\000\020\010\010\010\3108\010"
 1550      3F200000 
 1550      00100808 
 1550      08C83808 
 1551 03a7 00203826 		.ascii	"\000 8&!  \030\000\000\000\000\376\002\002\002\000\000"
 1551      21202018 
 1551      00000000 
 1551      FE020202 
 1551      0000
 1552 03b9 00007F40 		.ascii	"\000\000\177@@@\000\000\0140\300\000\000\000\000\000"
 1552      40400000 
 1552      0C30C000 
 1552      00000000 
 1553 03c9 00000106 		.ascii	"\000\000\001\0068\300\000\000\002\002\002\376\000\000"
 1553      38C00000 
 1553      020202FE 
 1553      0000
 1554 03d7 00004040 		.ascii	"\000\000@@@\177\000\000\000\000\000\004\002\002\002"
 1554      407F0000 
 1554      00000004 
 1554      020202
 1555 03e6 04000000 		.ascii	"\004\000\000\000\000\000\000\000\000\000\000\000\000"
 1555      00000000 
 1555      00000000 
 1555      00
 1556 03f3 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\200\200\200\200"
 1556      00808080 
 1556      80808080 
 1556      80
 1557 0400 00020204 		.ascii	"\000\002\002\004\000\000\000\000\000\000\000\000\000"
 1557      00000000 
 1557      00000000 
 1557      00
 1558 040d 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\000\000\000\031"
 1558      00808080 
 1558      80000000 
 1558      19
 1559 041a 24222222 		.ascii	"$\"\"\"? \010\370\000\200\200\000\000\000\000?\021 "
 1559      3F2008F8 
 1559      00808000 
 1559      0000003F 
 1559      1120
 1560 042c 20110E00 		.ascii	" \021\016\000\000\000\000\200\200\200\000\000\000\016"
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 46


 1560      00000080 
 1560      80800000 
 1560      000E
 1561 043a 11202020 		.ascii	"\021   \021\000\000\000\000\200\200\210\370\000\000"
 1561      11000000 
 1561      00808088 
 1561      F80000
 1562 0449 0E112020 		.ascii	"\016\021  \020? \000\000\200\200\200\200\000\000\000"
 1562      103F2000 
 1562      00808080 
 1562      80000000 
 1563 0459 1F222222 		.ascii	"\037\"\"\"\"\023\000\000\200\200\360\210\210\210\030"
 1563      22130000 
 1563      8080F088 
 1563      888818
 1564 0468 0020203F 		.ascii	"\000  ?  \000\000\000\000\200\200\200\200\200\000\000"
 1564      20200000 
 1564      00008080 
 1564      80808000 
 1564      00
 1565 0479 6B949494 		.ascii	"k\224\224\224\223`\000\010\370\000\200\200\200\000\000"
 1565      93600008 
 1565      F8008080 
 1565      800000
 1566 0488 203F2100 		.ascii	" ?!\000\000 ? \000\200\230\230\000\000\000\000\000 "
 1566      00203F20 
 1566      00809898 
 1566      00000000 
 1566      0020
 1567 049a 203F2020 		.ascii	" ?  \000\000\000\000\000\200\230\230\000\000\000\300"
 1567      00000000 
 1567      00809898 
 1567      000000C0 
 1568 04aa 8080807F 		.ascii	"\200\200\200\177\000\000\010\370\000\000\200\200\200"
 1568      000008F8 
 1568      00008080 
 1568      80
 1569 04b7 00203F24 		.ascii	"\000 ?$\002-0 \000\000\010\010\370\000\000\000\000\000"
 1569      022D3020 
 1569      00000808 
 1569      F8000000 
 1569      0000
 1570 04c9 20203F20 		.ascii	"  ?  \000\000\200\200\200\200\200\200\200\000 ? \000"
 1570      20000080 
 1570      80808080 
 1570      80800020 
 1570      3F2000
 1571 04dc 3F20003F 		.ascii	"? \000?\200\200\000\200\200\200\000\000 ?!\000\000 "
 1571      80800080 
 1571      80800000 
 1571      203F2100 
 1571      0020
 1572 04ee 3F200000 		.ascii	"? \000\000\200\200\200\200\000\000\000\037    \037\000"
 1572      80808080 
 1572      0000001F 
 1572      20202020 
 1572      1F00
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 47


 1573 0500 80800080 		.ascii	"\200\200\000\200\200\000\000\000\200\377\241  \021\016"
 1573      80000000 
 1573      80FFA120 
 1573      20110E
 1574 050f 00000000 		.ascii	"\000\000\000\000\200\200\200\200\000\000\016\021  \240"
 1574      80808080 
 1574      00000E11 
 1574      2020A0
 1575 051e FF808080 		.ascii	"\377\200\200\200\200\000\200\200\200\000  ?! \000\001"
 1575      80008080 
 1575      80002020 
 1575      3F212000 
 1575      01
 1576 052f 00000080 		.ascii	"\000\000\000\200\200\200\200\200\000\0003$$$$\031\000"
 1576      80808080 
 1576      00003324 
 1576      24242419 
 1576      00
 1577 0540 008080E0 		.ascii	"\000\200\200\340\200\200\000\000\000\000\000\037  \000"
 1577      80800000 
 1577      0000001F 
 1577      202000
 1578 054f 00808000 		.ascii	"\000\200\200\000\000\000\200\200\000\000\037   \020"
 1578      00008080 
 1578      00001F20 
 1578      202010
 1579 055e 3F208080 		.ascii	"? \200\200\200\000\000\200\200\200\000\001\0160\010"
 1579      80000080 
 1579      80800001 
 1579      0E3008
 1580 056d 06010080 		.ascii	"\006\001\000\200\200\000\200\000\200\200\200\0170\014"
 1580      80008000 
 1580      8080800F 
 1580      300C
 1581 057b 030C300F 		.ascii	"\003\0140\017\000\000\200\200\000\200\200\200\000\000"
 1581      00008080 
 1581      00808080 
 1581      0000
 1582 0589 20312E0E 		.ascii	" 1.\0161 \000\200\200\200\000\000\200\200\200\200\201"
 1582      31200080 
 1582      80800000 
 1582      80808080 
 1582      81
 1583 059a 8E701806 		.ascii	"\216p\030\006\001\000\000\200\200\200\200\200\200\000"
 1583      01000080 
 1583      80808080 
 1583      8000
 1584 05a8 0021302C 		.ascii	"\000!0,\"!0\000\000\000\000\000\200|\002\002\000\000"
 1584      22213000 
 1584      00000000 
 1584      807C0202 
 1584      0000
 1585 05ba 0000003F 		.ascii	"\000\000\000?@@\000\000\000\000\377\000\000\000\000"
 1585      40400000 
 1585      0000FF00 
 1585      000000
 1586 05c9 000000FF 		.ascii	"\000\000\000\377\000\000\000\000\002\002|\200\000\000"
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 48


 1586      00000000 
 1586      02027C80 
 1586      0000
 1587 05d7 00004040 		.ascii	"\000\000@@?\000\000\000\000\000\006\001\001\002\002"
 1587      3F000000 
 1587      00000601 
 1587      010202
 1588 05e6 04040000 		.ascii	"\004\004\000\000\000\000\000\000\000\000"
 1588      00000000 
 1588      0000
 1589              		.text
 1590              	.Letext0:
 1591              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 1592              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 1593              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1594              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1595              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1596              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1597              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1598              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1599              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1600              		.file 11 "USER/BSP/Inc/bsp_ascii.h"
ARM GAS  /var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_OLED.c
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:18     .text.WriteCmd:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:25     .text.WriteCmd:0000000000000000 WriteCmd
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:65     .text.WriteCmd:0000000000000028 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:70     .text.WriteDat:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:76     .text.WriteDat:0000000000000000 WriteDat
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:115    .text.WriteDat:0000000000000028 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:120    .text.bsp_OLED_Init:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:127    .text.bsp_OLED_Init:0000000000000000 bsp_OLED_Init
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:260    .text.bsp_OLED_SetPos:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:267    .text.bsp_OLED_SetPos:0000000000000000 bsp_OLED_SetPos
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:308    .text.bsp_OLED_Fill:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:315    .text.bsp_OLED_Fill:0000000000000000 bsp_OLED_Fill
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:396    .text.bsp_OLED_CLR:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:403    .text.bsp_OLED_CLR:0000000000000000 bsp_OLED_CLR
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:424    .text.bsp_OLED_ON:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:431    .text.bsp_OLED_ON:0000000000000000 bsp_OLED_ON
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:460    .text.bsp_OLED_OFF:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:467    .text.bsp_OLED_OFF:0000000000000000 bsp_OLED_OFF
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:496    .text.bsp_OLED_ShowStr:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:503    .text.bsp_OLED_ShowStr:0000000000000000 bsp_OLED_ShowStr
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:734    .text.bsp_OLED_ShowStr:00000000000000d0 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:740    .text.bsp_OLED_ShowCN:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:747    .text.bsp_OLED_ShowCN:0000000000000000 bsp_OLED_ShowCN
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:844    .text.bsp_OLED_ShowCN:0000000000000044 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:849    .text.bsp_OLED_ShowCN_STR:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:856    .text.bsp_OLED_ShowCN_STR:0000000000000000 bsp_OLED_ShowCN_STR
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:913    .text.bsp_OLED_DrawBMP:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:920    .text.bsp_OLED_DrawBMP:0000000000000000 bsp_OLED_DrawBMP
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1009   .text.bsp_OLED_ShowChar:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1016   .text.bsp_OLED_ShowChar:0000000000000000 bsp_OLED_ShowChar
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1172   .text.bsp_OLED_ShowChar:0000000000000088 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1178   .text.bsp_OLED_pow:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1185   .text.bsp_OLED_pow:0000000000000000 bsp_OLED_pow
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1223   .text.bsp_OLED_ShowNum:0000000000000000 $t
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1230   .text.bsp_OLED_ShowNum:0000000000000000 bsp_OLED_ShowNum
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1360   .text.bsp_OLED_ShowNum:0000000000000090 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1491   .rodata.F8X16:0000000000000000 F8X16
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1393   .rodata.F6x8:0000000000000000 F6x8
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1372   .data.F16x16:0000000000000000 F16x16
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1368   .data.F16x16:0000000000000000 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1389   .rodata.F6x8:0000000000000000 $d
/var/folders/cb/0rfcg7_d4zbdkgdchwlcykcc0000gn/T//cc4SliNq.s:1487   .rodata.F8X16:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c2
HAL_Delay
